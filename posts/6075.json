{"bookmarked": 3, "bucket_name": "Today", "bucket_order": 3, "change_log": [{"anon": "stud", "data": "jcjr49zpcxa701", "type": "create", "uid_a": "a_0", "when": "2018-01-18T00:21:52Z"}, {"anon": "no", "data": "jcjrlujp5mq5bs", "to": "jcjr49zm8tt700", "type": "s_answer", "uid": "is6p8zl3nphb8", "when": "2018-01-18T00:35:32Z"}, {"anon": "no", "data": "jcjrmrxjgpc62c", "type": "s_answer_update", "uid": "is6p8zl3nphb8", "when": "2018-01-18T00:36:15Z"}, {"anon": "no", "data": "jcjrnk6yexd6oz", "type": "s_answer_update", "uid": "is6p8zl3nphb8", "when": "2018-01-18T00:36:52Z"}, {"anon": "no", "data": "jcjro4ouhi46z4", "type": "s_answer_update", "uid": "is6p8zl3nphb8", "when": "2018-01-18T00:37:18Z"}, {"anon": "no", "data": "jcjrpl16wfg6p", "type": "s_answer_update", "uid": "is6p8zl3nphb8", "when": "2018-01-18T00:38:26Z"}, {"anon": "stud", "to": "jcjr49zm8tt700", "type": "followup", "uid_a": "a_0", "when": "2018-01-18T00:39:24Z"}, {"anon": "no", "to": "jcjr49zm8tt700", "type": "feedback", "uid": "is6p8zl3nphb8", "when": "2018-01-18T07:42:30Z"}, {"anon": "no", "data": "jck6vvnn3cr1qm", "type": "s_answer_update", "uid": "is6p8zl3nphb8", "when": "2018-01-18T07:43:14Z"}], "children": [{"bucket_name": "Today", "bucket_order": 3, "children": [], "config": {}, "created": "2018-01-18T00:35:32Z", "data": {"embed_links": []}, "folders": [], "history": [{"anon": "no", "content": "<p>The course is divided into roughly three modules (perhaps more implicitly than explicitly):</p>\n<p></p>\n<p>1) C and Assembly Programming</p>\n<p>2) CPU Design, Datapath, Memory Hierarchy/Caches</p>\n<p>3) Parallelism and assortment of other stuff (RAID, Hamming ECC, atomic operations, etc.)</p>\n<p></p>\n<p>Unless you&#39;re interested in digital circuits/processor design, most (but not all) of (2) is irrelevant, but worth having exposure to (hence why all EECS/CS people must take 61C)</p>\n<p></p>\n<p>(1) and (3) are very practical and useful especially for lower level and performance programming/distributed systems, although (1) is learnable on your own.</p>\n<p></p>\n<p>The most valuable thing I took away from 61C was how caches affect performance and how to write code that gets good performance out of the memory hierarchy. This is in the end of (2), plus all the 162 relevant parts are in (3), so I&#39;d say everything after ~3 weeks before MT2 is stuff to look out for.</p>\n<p></p>\n<p>Of course the early stuff is a great time to have your first exposure with memory management and C which are pretty essential for anyone interested in CS Systems, so right now&#39;s important too!</p>", "created": "2018-01-18T07:43:14Z", "subject": "", "uid": "is6p8zl3nphb8"}, {"anon": "no", "content": "<p>The course is divided into roughly three modules (perhaps more implicitly than explicitly):</p>\n<p></p>\n<p>1) C and Assembly Programming</p>\n<p>2) CPU Design, Datapath, Memory Hierarchy/Caches</p>\n<p>3) Parallelism and assortment of other stuff (RAID, Hamming ECC, atomic operations, etc.)</p>\n<p></p>\n<p>Unless you&#39;re interested in digital circuits/processor design, most (but not all) of (2) is irrelevant, but worth having exposure to (hence why all EECS/CS people must take 61C)</p>\n<p></p>\n<p>(1) and (3) are very practical and useful especially for lower level and performance programming/distributed systems, although (1) is learnable on your own.</p>\n<p></p>\n<p>The most valuable thing I took away from 61C was how caches affect performance and how to write code that gets good performance out of the memory hierarchy plus all the 162 relevant parts are in (3), so I&#39;d say everything after ~3 weeks before MT2 is stuff to look out for. Of course the early stuff is a great time to have your first exposure with memory management and C which are pretty essential for anyone interested in CS Systems, so right now&#39;s important too!</p>", "created": "2018-01-18T00:38:26Z", "subject": "", "uid": "is6p8zl3nphb8"}, {"anon": "no", "content": "<p>The course is divided into roughly three modules (perhaps more implicitly than explicitly):</p>\n<p></p>\n<p>1) C and Assembly Programming</p>\n<p>2) CPU Design, Datapath, Memory Hierarchy/Caches</p>\n<p>3) Parallelism and assortment of other stuff (RAID, Hamming ECC, atomic operations, etc.)</p>\n<p></p>\n<p>Unless you&#39;re interested in digital circuits/processor design, most (but not all) of (2) is irrelevant, but worth having exposure to (hence why all EECS/CS people must take 61C)</p>\n<p></p>\n<p>(1) and (3) are very practical and useful especially for lower level and performance programming/distributed systems, although (1) is learnable on your own.</p>\n<p></p>\n<p>The most valuable thing I took away from 61C was how caches affect performance and how to write code that gets good performance out of the memory hierarchy plus all the 162 relevant parts are in (3), so I&#39;d say everything after ~3 weeks before MT2 is stuff to look out for.</p>", "created": "2018-01-18T00:37:18Z", "subject": "", "uid": "is6p8zl3nphb8"}, {"anon": "no", "content": "<p>The course is divided into roughly three modules (perhaps more implicitly than explicitly):</p>\n<p></p>\n<p>1) C and Assembly Programming</p>\n<p>2) CPU Design, Datapath, Memory Hierarchy/Caches</p>\n<p>3) Parallelism and assortment of other stuff (RAID, Hamming ECC, atomic operations, etc.)</p>\n<p></p>\n<p>Unless you&#39;re interested in digital circuits/processor design, most (but not all) of (2) is irrelevant, but worth having exposure to (hence why all EECS/CS people must take 61C)</p>\n<p></p>\n<p>(1) and (3) are very practical and useful especially for lower level and performance programming/distributed systems, although (1) is learnable on your own.</p>\n<p></p>\n<p>The most valuable thing I took away from 61C was how caches affect performance and how to write code that gets good performance out of the memory hierarchy; all the 162 relevant parts are in (3), so I&#39;d say everything after ~3 weeks before MT2 is stuff to look out for.</p>", "created": "2018-01-18T00:36:52Z", "subject": "", "uid": "is6p8zl3nphb8"}, {"anon": "no", "content": "<p>The course is divided into roughly three modules (perhaps more implicitly than explicitly):</p>\n<p></p>\n<p>1) C and Assembly Programming</p>\n<p>2) CPU Design, Datapath, Memory Hierarchy/Caches</p>\n<p>3) Parallelism and assortment of other stuff (RAID, Hamming ECC, atomic operations, etc.)</p>\n<p></p>\n<p>Unless you&#39;re interested in digital circuits/processor design, most (but not all) of (2) is irrelevant, but worth having exposure to (hence why all EECS/CS people must take 61C)</p>\n<p></p>\n<p>(1) and (3) are very practical and useful especially for performance programming/distributed systems, although (1) is learnable on your own.</p>\n<p></p>\n<p>The most valuable thing I took away from 61C was how caches affect performance and how to write code that gets good performance out of the memory hierarchy; all the 162 relevant parts are in (3), so I&#39;d say everything after ~3 weeks before MT2 is stuff to look out for.</p>", "created": "2018-01-18T00:36:15Z", "subject": "", "uid": "is6p8zl3nphb8"}, {"anon": "no", "content": "<p>The course is divided into roughly three modules (perhaps more implicitly than explicitly):</p>\n<p></p>\n<p>1) C and Assembly Programming</p>\n<p>2) CPU Design, Datapath, Memory Hierarchy/Caches</p>\n<p>3) Parallelism and assortment of other stuff (RAID, Hamming ECC, atomic operations, etc.)</p>\n<p></p>\n<p>Unless you&#39;re interested in digital circuits/processor design, most (but not all) of (2) is irrelevant.</p>\n<p></p>\n<p>(1) and (3) are very practical and useful especially for performance programming/distributed systems, although (1) is learnable on your own.</p>\n<p></p>\n<p></p>\n<p>The most valuable thing I took away from 61C was how caches affect performance and how to write code that gets good performance out of the memory hierarchy; all the 162 relevant parts are in (3), so I&#39;d say everything after ~3 weeks before MT2 is stuff to look out for.</p>", "created": "2018-01-18T00:35:32Z", "subject": "", "uid": "is6p8zl3nphb8"}], "id": "jcjrlujh5ev5bq", "is_tag_endorse": false, "tag_endorse": [{"admin": false, "endorser": {"ja1ym0oeuey71s": 1521850327, "jcfrsqcwoyyi5": 1525368792, "jtg9c0ed8yh13k": 1557600730}, "facebook_id": null, "id": "iy9vp1dhyxfpl", "name": "William Curtin", "photo": null, "photo_url": null, "published": true, "role": "student", "us": false}, {"admin": false, "endorser": {}, "facebook_id": null, "id": "j5io8ykpvrs7pj", "name": "Thu", "photo": null, "photo_url": null, "published": true, "role": "student", "us": false}, {"admin": false, "endorser": {"jhw82c92o5p1dh": 1532404312}, "facebook_id": null, "id": "hzd1lb5fiuc2sq", "name": "Nimalen Sivapalan", "photo": "1456610056_35.png", "photo_url": "https://d1b10bmlvqabco.cloudfront.net/photos/hzd1lb5fiuc2sq/1456610056_35.png", "published": true, "role": "student", "us": false}, {"admin": false, "endorser": {}, "facebook_id": null, "id": "ipxjx49hzgs1di", "name": "Jennifer Zou", "photo": null, "photo_url": null, "published": true, "role": "student", "us": false}, {"admin": false, "endorser": {}, "facebook_id": null, "id": "iscem14kbsu5vi", "name": "Keerthi Bhattaram", "photo": null, "photo_url": null, "published": true, "role": "student", "us": false}, {"admin": false, "endorser": {}, "facebook_id": null, "id": "jg2f97tx1v13pa", "name": "Jingkang Zhang", "photo": null, "photo_url": null, "published": true, "role": "student", "us": false}], "tag_endorse_arr": ["iy9vp1dhyxfpl", "j5io8ykpvrs7pj", "hzd1lb5fiuc2sq", "ipxjx49hzgs1di", "iscem14kbsu5vi", "jg2f97tx1v13pa"], "type": "s_answer"}, {"anon": "stud", "bucket_name": "Week 1/14 - 1/20", "bucket_order": 120, "children": [{"anon": "no", "bucket_name": "Week 1/14 - 1/20", "bucket_order": 120, "children": [], "config": {}, "created": "2018-01-18T07:42:30Z", "data": {"embed_links": null}, "folders": [], "id": "jck6uxhpxc31be", "subject": "<p>No problem!</p>", "tag_good": [], "tag_good_arr": [], "type": "feedback", "uid": "is6p8zl3nphb8", "updated": "2018-01-18T07:42:30Z"}], "config": {}, "created": "2018-01-18T00:39:24Z", "data": {"embed_links": null}, "folders": [], "id": "jcjrqtpl6kh4te", "no_answer": 0, "no_upvotes": 0, "subject": "<p>Thank you so much for the detailed response!</p>", "tag_good": [], "tag_good_arr": [], "type": "followup", "uid_a": "a_0", "updated": "2018-01-18T00:39:24Z"}], "config": {}, "created": "2018-01-18T00:21:52Z", "data": {"embed_links": []}, "default_anonymity": "no", "drafts": null, "folders": ["eecs", "other", "peer_directed", "faculty_advising"], "history": [{"anon": "stud", "content": "<p>Hi<br />I was wondering if you had to choose, what topics would you consider less important in 61c (in terms of industry and knowledge for 162). I&#39;m\u00a0going to learn as much as I can from the class but there will be times where I may have to sacrifice time that would normally be spent on 61c on something else given my current schedule. I&#39;ve heard there is a ton of material in the course so I was wondering if someone could point to the stuff that is of relatively of lesser importance and or the very important stuff.\u00a0 I&#39;m taking it P/NP so in terms of my grade, I just need a C-. I appreciate any and all feedback.<br /><br />Thanks</p>", "created": "2018-01-18T00:21:52Z", "subject": "61c question", "uid_a": "a_0"}], "i_edits": [], "id": "jcjr49zm8tt700", "is_bookmarked": false, "is_tag_good": false, "my_favorite": false, "no_answer": 0, "no_answer_followup": 0, "nr": 6075, "num_favorites": 6, "q_edits": [], "request_instructor": 0, "request_instructor_me": false, "s_edits": [], "status": "active", "t": 1654550292352, "tag_good": [{"admin": false, "endorser": {"ja1ym0oeuey71s": 1521850327, "jcfrsqcwoyyi5": 1525368792, "jtg9c0ed8yh13k": 1557600730}, "facebook_id": null, "id": "iy9vp1dhyxfpl", "name": "William Curtin", "photo": null, "photo_url": null, "published": true, "role": "student", "us": false}], "tag_good_arr": ["iy9vp1dhyxfpl"], "tags": ["eecs", "faculty_advising", "other", "peer_directed", "student"], "type": "question", "unique_views": 426}