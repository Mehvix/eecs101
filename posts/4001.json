{"bookmarked": 10, "bucket_name": "Today", "bucket_order": 3, "change_log": [{"anon": "stud", "data": "j1vu6gt7rwt58a", "type": "create", "uid_a": "a_0", "when": "2017-04-24T08:04:01Z"}, {"anon": "stud", "data": "j1vu7d7m4o818z", "type": "update", "uid_a": "a_0", "when": "2017-04-24T08:04:43Z"}, {"anon": "stud", "to": "j1vu6gt4piz589", "type": "followup", "uid_a": "a_1", "when": "2017-04-24T14:14:23Z"}, {"anon": "no", "to": "j1vu6gt4piz589", "type": "followup", "uid": "hktxri9fueh3ci", "when": "2017-04-24T16:08:36Z"}, {"anon": "stud", "to": "j1vu6gt4piz589", "type": "followup", "uid_a": "a_2", "when": "2017-04-24T16:44:34Z"}, {"anon": "no", "to": "j1vu6gt4piz589", "type": "followup", "uid": "hzcyg40087b4is", "when": "2017-04-24T19:06:53Z"}, {"anon": "no", "data": "j1won9a4o074hv", "to": "j1vu6gt4piz589", "type": "s_answer", "uid": "h69mwtr4j7461h", "when": "2017-04-24T22:16:53Z"}, {"anon": "no", "to": "j1vu6gt4piz589", "type": "followup", "uid": "h5rldp6pk1m1j3", "when": "2017-04-25T21:28:32Z"}], "children": [{"anon": "stud", "bucket_name": "Week 4/23 - 4/29", "bucket_order": 156, "children": [], "config": {}, "created": "2017-04-24T14:14:23Z", "data": {"embed_links": null}, "folders": [], "id": "j1w7erjixvz21c", "no_answer": 0, "no_upvotes": 0, "subject": "One thing I do sometimes is go through all my code and make sure it is doing what it is supposed to be doing. A lot of my bugs are because I made some stupid mistake some lines before", "tag_good": [], "tag_good_arr": [], "type": "followup", "uid_a": "a_1", "updated": "2017-04-24T14:14:23Z"}, {"anon": "no", "bucket_name": "Week 4/23 - 4/29", "bucket_order": 156, "children": [], "config": {}, "created": "2017-04-24T16:08:36Z", "data": {"embed_links": null}, "folders": [], "id": "j1wbhmzpm676at", "no_answer": 0, "no_upvotes": 0, "subject": "<p>For me, I incrementally write line by line after checking that the previous lines or the one I just added are doing exactly what I want them to do. So its more like validate as you write instead of try to write the whole thing and try to debug a giant paragraph. That way you&#39;re sure of what you&#39;ve written and can take a seat back to think about what should happen next.</p>\n<p></p>\n<p>Although honestly, your breakdown of coding sounds very much like everyone else&#39;s.\u00a0</p>", "tag_good": [], "tag_good_arr": [], "type": "followup", "uid": "hktxri9fueh3ci", "updated": "2017-04-24T16:08:36Z"}, {"anon": "stud", "bucket_name": "Week 4/23 - 4/29", "bucket_order": 156, "children": [], "config": {}, "created": "2017-04-24T16:44:34Z", "data": {"embed_links": null}, "folders": [], "id": "j1wcrw6wpdx50r", "no_answer": 0, "no_upvotes": 0, "subject": "Write unit and integration tests! It&#39;s a lot easier to debug when you can narrow down where the error occurs.", "tag_good": [], "tag_good_arr": [], "type": "followup", "uid_a": "a_2", "updated": "2017-04-24T16:44:34Z"}, {"anon": "no", "bucket_name": "Week 4/23 - 4/29", "bucket_order": 156, "children": [], "config": {}, "created": "2017-04-24T19:06:53Z", "data": {"embed_links": null}, "folders": [], "id": "j1whux3anq54wu", "no_answer": 0, "no_upvotes": 0, "subject": "<p>Not an end-all answer, but this is a good read on how to approach debugging mentally:\u00a0http://queue.acm.org/detail.cfm?id=3068754</p>", "tag_good": [], "tag_good_arr": [], "type": "followup", "uid": "hzcyg40087b4is", "updated": "2017-04-24T19:06:53Z"}, {"bucket_name": "Today", "bucket_order": 3, "children": [], "config": {}, "created": "2017-04-24T22:16:53Z", "data": {"embed_links": []}, "folders": [], "history": [{"anon": "no", "content": "<p>There&#39;s some good advice below. I would also point you towards &#64;3998, if you haven&#39;t seen it; making your code more organized will naturally help with debugging.</p>\n<p>For example, making sure your code is broken up into reasonably sized functions makes it both readable as well as more testable, i.e. you can write tests on each individual function and\u00a0thus figure out which part(s) aren&#39;t working.</p>\n<p>And more generally, I would emphasize the importance of tests / logging statements.</p>\n<p></p>\n<p>I have to wonder about what sorts of bugs you&#39;re seeing / trying to get better at fixing though. Putting aside syntactic issues (for which Googling / asking for help is an excellent approach), I don&#39;t think most bugs are ones that are necessarily Googleable, or ones where it would make sense to just comment out lines (which should be introducing more errors).</p>\n<p></p>\n<p></p>", "created": "2017-04-24T22:16:53Z", "subject": "", "uid": "h69mwtr4j7461h"}], "id": "j1won99yuxv4hu", "is_tag_endorse": false, "tag_endorse": [], "tag_endorse_arr": [], "type": "s_answer"}, {"anon": "no", "bucket_name": "Week 4/23 - 4/29", "bucket_order": 156, "children": [], "config": {}, "created": "2017-04-25T21:28:32Z", "data": {"embed_links": null}, "folders": [], "id": "j1y2cxo8bo92gg", "no_answer": 0, "no_upvotes": 0, "subject": "<p>I wrote a little bit about debugging for a CS decal\u00a0I used to teach. It sounds like it might\u00a0be helpful\u00a0<br /><br />Here&#39;s <a href=\"http://42cs.github.io/book/week2/debug.html\" target=\"_blank\">the link</a></p>", "tag_good": [], "tag_good_arr": [], "type": "followup", "uid": "h5rldp6pk1m1j3", "updated": "2017-04-25T21:28:32Z"}], "config": {}, "created": "2017-04-24T08:04:01Z", "data": {"embed_links": []}, "default_anonymity": "no", "drafts": null, "folders": ["eecs", "cs"], "history": [{"anon": "stud", "content": "<p>My bottleneck as a programmer, since I started coding, has been debugging. In the beginning, in high school, debugging was easy - they were relatively simple Java programs. But here at Cal, our projects\u00a0are significantly more complicated.</p>\n<p></p>\n<p>On a typical project, I spend around 30% of my time understanding the spec, 5% coding, and 65% debugging. Consequently, I&#39;ve started to enjoy programming less, not to mention it takes a lot longer for me than it should.</p>\n<p></p>\n<p>How can I get good at debugging? Doing more debugging\u00a0hasn&#39;t been enough for me - I just keep repeating the same failed techniques with the same consequences. (1)\u00a0<strong>I&#39;m wondering if there&#39;s some book or resource I can work through to systematically build up my debugging muscles.</strong></p>\n<p></p>\n<p>One thing I need to learn well is the debugger. I know all the basic gdb commands, but it&#39;s still tough for me to debug bugs spanning multiple files. (2)\u00a0<strong>Are there some good debugger tutorials that\u00a0teach a systematic\u00a0methodology for debugging - not just commands?</strong></p>\n<p></p>\n<p>Currently, debugging cycle looks like this:</p>\n<p>1) Google the bug</p>\n<p>2) Comment out\u00a0possible buggy lines and retry</p>\n<p>3) Run debugger (also valgrind for C)</p>\n<p>4) Ask friend\u00a0if they&#39;ve seen this bug before</p>\n<p>5) Repeat until bug not found</p>\n<p></p>\n<p><strong>Any other advice?</strong></p>\n<p></p>\n<p>Thank you!</p>", "created": "2017-04-24T08:04:43Z", "subject": "Getting good at debugging", "uid_a": "a_0"}, {"anon": "stud", "content": "<p>My bottleneck as a programmer, since I started coding, has been debugging. In the beginning, in high school, debugging was easy - they were relatively simple Java programs. But here at Cal, our projects\u00a0are significantly more complicated.</p>\n<p></p>\n<p>On a typical project, I spend around 30% of my time understanding the spec, 5% coding, and 65% debugging. Consequently, I&#39;ve started to enjoy programming less, not to mention it takes a lot longer for me than it should.</p>\n<p></p>\n<p>How can I get good at debugging? Doing more debugging\u00a0hasn&#39;t been enough for me - I just keep repeating the same failed techniques with the same consequences. (1)\u00a0<strong>I&#39;m wondering if there&#39;s some book or resource I can work through to systematically build up my debugging muscles.</strong></p>\n<p></p>\n<p>One thing I need to learn well is the debugger. I know all the basic gdb commands, but it&#39;s still tough for me to debug bugs spanning multiple files. (2)\u00a0<strong>Are there some good debugger tutorials that\u00a0teach a systematic\u00a0methodology for debugging - not just commands?</strong></p>\n<p></p>\n<p>Currently, debugging cycle looks like this:</p>\n<p>1) Google the bug</p>\n<p>2) Comment out\u00a0possible buggy lines and retry</p>\n<p>3) Run debugger (also valgrind for C)</p>\n<p>4) Ask friend\u00a0if they&#39;ve seen this bug before</p>\n<p>5) Repeat until bug not found</p>\n<p></p>\n<p>Thank you!</p>", "created": "2017-04-24T08:04:01Z", "subject": "Getting good at debugging", "uid_a": "a_0"}], "i_edits": [], "id": "j1vu6gt4piz589", "is_bookmarked": false, "is_tag_good": false, "my_favorite": false, "no_answer": 0, "no_answer_followup": 0, "nr": 4001, "num_favorites": 4, "q_edits": [], "request_instructor": 0, "request_instructor_me": false, "s_edits": [], "status": "active", "t": 1654552222254, "tag_good": [{"admin": false, "endorser": {}, "facebook_id": null, "id": "hzab6kpr3c048h", "name": "Justin Luke", "photo": "1473540382_35.png", "photo_url": "https://d1b10bmlvqabco.cloudfront.net/photos/hzab6kpr3c048h/1473540382_35.png", "published": true, "role": "student", "us": false}, {"admin": false, "endorser": {}, "facebook_id": null, "id": "hzcyfybsitu4dc", "name": "Rachel Zoll", "photo": "1503595543_35.png", "photo_url": "https://d1b10bmlvqabco.cloudfront.net/photos/hzcyfybsitu4dc/1503595543_35.png", "published": true, "role": "student", "us": false}, {"admin": false, "class_sections": ["classof2019_hyq0br1u3kx7dg"], "endorser": {}, "facebook_id": null, "id": "ib2kjjo3h4u1qs", "name": "Poorvi Acharya", "photo": null, "photo_url": null, "published": true, "role": "student", "us": false}], "tag_good_arr": ["hzab6kpr3c048h", "hzcyfybsitu4dc", "ib2kjjo3h4u1qs"], "tags": ["cs", "eecs", "student"], "type": "question", "unique_views": 421}