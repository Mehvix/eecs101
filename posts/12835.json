{"bookmarked": 9, "bucket_name": "Today", "bucket_order": 3, "change_log": [{"anon": "stud", "data": "kdj3xpvzit95qn", "type": "create", "uid_a": "a_0", "v": "all", "when": "2020-08-06T18:02:01Z"}, {"anon": "stud", "data": "kdltyf8fntz617", "to": "kdj3xpvwoze5qm", "type": "s_answer", "uid_a": "a_1", "when": "2020-08-08T15:45:56Z"}, {"anon": "stud", "to": "kdj3xpvwoze5qm", "type": "followup", "uid_a": "a_2", "when": "2020-08-08T21:33:27Z"}, {"anon": "stud", "to": "kdj3xpvwoze5qm", "type": "feedback", "uid_a": "a_1", "when": "2020-08-08T21:41:42Z"}, {"anon": "stud", "to": "kdj3xpvwoze5qm", "type": "feedback", "uid_a": "a_3", "when": "2020-08-08T21:59:32Z"}, {"anon": "stud", "to": "kdj3xpvwoze5qm", "type": "feedback", "uid_a": "a_2", "when": "2020-08-08T22:00:56Z"}, {"anon": "stud", "to": "kdj3xpvwoze5qm", "type": "feedback", "uid_a": "a_3", "when": "2020-08-08T22:06:33Z"}, {"anon": "stud", "to": "kdj3xpvwoze5qm", "type": "feedback", "uid_a": "a_1", "when": "2020-08-08T22:06:40Z"}, {"anon": "stud", "to": "kdj3xpvwoze5qm", "type": "feedback", "uid_a": "a_1", "when": "2020-08-08T22:07:02Z"}, {"anon": "stud", "data": "kdn9i29tcskld", "type": "s_answer_update", "uid_a": "a_4", "when": "2020-08-09T15:48:53Z"}, {"anon": "stud", "data": "kdn9kqhszx81cx", "type": "s_answer_update", "uid_a": "a_4", "when": "2020-08-09T15:50:58Z"}, {"anon": "stud", "data": "kdnbrsd85t54v2", "type": "s_answer_update", "uid_a": "a_1", "when": "2020-08-09T16:52:26Z"}, {"anon": "stud", "data": "kdnc6o9368f1ub", "type": "s_answer_update", "uid_a": "a_1", "when": "2020-08-09T17:04:01Z"}, {"anon": "stud", "data": "kdndjmrlxwz1r0", "type": "s_answer_update", "uid_a": "a_4", "when": "2020-08-09T17:42:05Z"}, {"anon": "stud", "data": "kdndoni9xb14ew", "type": "s_answer_update", "uid_a": "a_4", "when": "2020-08-09T17:45:59Z"}, {"anon": "stud", "data": "kdndu3d03566un", "type": "s_answer_update", "uid_a": "a_4", "when": "2020-08-09T17:50:13Z"}, {"anon": "stud", "data": "kdne25rv6sbpc", "type": "s_answer_update", "uid_a": "a_4", "when": "2020-08-09T17:56:29Z"}, {"anon": "stud", "data": "kdne2wcxq7v12h", "type": "s_answer_update", "uid_a": "a_4", "when": "2020-08-09T17:57:04Z"}], "children": [{"bucket_name": "Today", "bucket_order": 3, "children": [], "config": {}, "created": "2020-08-08T15:45:56Z", "data": {"embed_links": []}, "folders": [], "history": [{"anon": "stud", "content": "<p>I would recommend maybe taking EECS 225B. The content is super similar and the class is logistically a lot less of a mess than 194-26 is.</p>\n<p></p>\n<p>---</p>\n<p></p>\n<p>Personally, 194-26 was one of the most rewarding classes I&#39;ve ever taken at Cal from a pure enjoyment perspective. Efros is a fantastic lecturer and is far more engaging than my other professors. I found the content to be super interesting, he would spend time connecting the techniques we discussed in class to topics in biology and cognitive science. The projects were open ended (little to no starter code) but were fun to write and produced very visually satisfying results. I personally learned a lot even tho I had substantial prerequisite experience (16B &amp; 120), as this class offered a chance to expand upon and apply techniques from those classes on images in projects instead of theorizing about them in problem sets. I would agree with the sentiments posted by Anon. Scale and Atom.</p>\n<p></p>\n<p>I think Anonymous Comp&#39;s followups are an unfair criticism of the class. To me, they show a couple of things:</p>\n<p></p>\n<p>&#34;midterm that never happened, project specs from 1998 designed for matlab, ... etc.&#34;</p>\n<p>They ignored a point that Efros reiterated throughout the semester especially as shelter in place began to happen - that he wants students to focus on and enjoy learning the material, to not freak out about nitty gritty details of grading, and to give the staff (1 prof and 3 gsis for 150 students I think?) a bit of leeway. If you want to shoot for an A/A&#43; with certainty this is not the class for you. It is a legitimate concern- his grading is pretty opague and he openly chides ppl trying to point grub. He says he doesn&#39;t release detailed rubrics with the spec because he doesn&#39;t like students doing the bare minimum to check the boxes instead of exploring/experimenting a bit. But I&#39;d agree with the poster below that there are a lot of worse classes and a lot of profs who actually don&#39;t care about students at all (as opposed to caring a lot about what they talk about in lecture and what you&#39;re learning).</p>\n<p></p>\n<p>Additionally, the Matlab criticism is somewhat disingenuous, as those specs were included in a list of final project ideas which also included well-structured specs with Python starter code. Efros did say some would be easier than others and he was merely providing students with some freedom to explore.</p>\n<p></p>\n<p>&#34;Implementing a bandpass and lowpass filter? Implementing a linear transformation? Implementing another linear transformation?</p>\n<p>Oh wow, now we can add one LPF&#39;ed image to an HPF&#39;ed image? And we can average two linear transformations to make a new halfway image? Amazing! And now let&#39;s spend 3 hours dumping all this stuff into an HTML file!&#34;</p>\n<p></p>\n<p>I think this is an extremely reductionist view of the content and techniques taught in the class (and betrays the arrogance of the poster). Yes, at the core of the project implementations are techniques from linear algebra and signal processing. But implementing these in code is not the same as learning about them in lecture. Obviously the follow-up poster has significant prior experience and maybe that &#34;ruined the magic&#34; of the class for them, but I did too and I found that it only made the content taught in class even more interesting. I think there&#39;s a lot of value in seeing the bandpass filter you learn about in 16b/120 being applied to an image of your choice after only seeing it on lecture slides and paper HWs, and I think it&#39;s beautiful to understand how applying an affine warp on a picture is really just the math we all remember (to varying degrees haha) from 16a married to some clever implementation tricks. The write-ups were somewhat time consuming but I enjoyed the opportunity to showcase my results and additional exploration. If you&#39;re cramped for time, maybe you won&#39;t get as much out of this class as you otherwise would (I took it in my final semester with one other technical). Its a valid concern. But I think it&#39;s a poor argument to complain about the class teaching relatively simple concepts, to Anon. Comp., at least. It&#39;s like being disappointed that the core of a large famous search engine is really just the PageRank hw problem from 16A. Sometimes cool things have pretty simple stuff in the middle. Why not enjoy all the other cool stuff that&#39;s built up around it?</p>\n<p></p>\n<p>TL;DR: class is a blast, lecturer is great, it is worth taking irrespective of your background in SP, chill out and enjoy the ride\u00a0</p>\n<p></p>\n<p>-------</p>\n<p></p>\n<p>Anon comp here: I would definitely not call 16b and 120 extensive background in signal processing and graphics. All this stuff you say about the coolness of implementing these techniques on images isn&#39;t unique to 194-24. In 123 you implement a video compression algorithm from scratch for your final project, which is much more technically interesting than just fiddling with stuff getting it to look cool. Cool math and cool implementations aren&#39;t disjoint, and I was just extremely unimpressed by 194-26 in that the applications weren&#39;t anything I hadn&#39;t seen before and overall the class felt like &#34;image processing for the prerequisite-lacking CS major&#34;. And some of the stuff introduced isn&#39;t even efficient. The method the class teaches you to do a low-pass is to convolve with a gaussian, but this should really be done in the spectral domain to leverage FFT runtime. I know np.convolve is basically built to do this already, but this is another instance of the class only brushing over the super basic stuff just enough for you to get a result that looks cool while giving you little to no understanding of what&#39;s really going on. The spectral implementation of filters is just one of the super important concepts in image processing this course doesn&#39;t cover.</p>\n<p></p>\n<p>There&#39;s so much that&#39;s &#34;under the hood&#34; in image processing that isn&#39;t just coding up math that you learned in other classes. I personally wish this class covered more of that stuff, like the brief intro to perspective geometry at the end. DSP is an example of a class with both interesting math AND super interesting coding projects.\u00a0</p>\n<p></p>\n<p>TD;DR: Don&#39;t take if you&#39;ve done other SP/graphics classes with significant coding. You&#39;ll quickly learn comp photo isn&#39;t anything interesting and is just a slog with an endless barrage of theoretically mindless coding projects.</p>\n<p></p>\n<p>---</p>\n<p></p>\n<p>I&#39;m so sorry the class ended up being a waste of time for someone as talented and enlightened as you especially when it comes to EE. Perhaps the second part of my comment was interpreted in a way that made it seem I was trying to understate the true level of expertise you need to be proficient in the field. I&#39;m not. I took this class for funsies as a 2nd semester senior.</p>\n<p></p>\n<p>I think it&#39;s important that you highlighted the deficiencies that this classes has, obviously it is not intended to be a rigorous, EE-focused image processing class (it&#39;s\u00a0 listed as a CS class after all). I&#39;m not an EE guy myself, just someone who&#39;s taken a bit more of the track than most folks I know, so thanks for letting me and posters here know about the true depth of the field. Obviously the Piazza and much of the student body skew CS so you&#39;re bringing a perspective that many folks don&#39;t have.</p>\n<p></p>\n<p>That being said, I think the attitude in your comments is arrogant and dismissive to many students, including myself, who have tried to offer constructive responses to the question. It is perfectly valid to highlight the relative deficiencies of the class from a theory and/or an implementation perspective, and to share other classes that fill in those gaps. I don&#39;t think it is necessary to adopt such a tone and belittle what you consider trivial techniques just to get your point across. It does not contribute to the discussion. You seem like you really regretted taking the class because of its limitations, which you clearly articulated in your response above mine. Why did it take so long (a student response, 3 followup comments, then rebutting my comment) for you to express these valuable insights? Why do you open by tearing down the things you dislike, instead of offering insights that others in this forum could benefit from?</p>\n<p></p>\n<p>As a student who had a good experience in comp photo along with many other friends and classmates, and no intention of pursuing a career in image processing, I felt obligating to respond to the superfluous belittling and negativity in this post, qualities which are sadly commonplace in this department.\u00a0</p>\n<p></p>\n<p>Thank you for sharing your expertise and opinion. But for the sake of your fellow students, please check the negativity at the door.</p>\n<p></p>\n<p>@OP emailing Efros or his GSIs might be your best bet. I apologize for continuing to derail this discussion- I think there is plenty of valuable info about the class in this thread so I feel no further need to respond. Hope you find everything here helpful in your decision.</p>\n<p></p>\n<p>--anon mouse</p>", "created": "2020-08-09T17:57:04Z", "subject": "", "uid_a": "a_4"}, {"anon": "stud", "content": "<p>I would recommend maybe taking EECS 225B. The content is super similar and the class is logistically a lot less of a mess than 194-26 is.</p>\n<p></p>\n<p>---</p>\n<p></p>\n<p>Personally, 194-26 was one of the most rewarding classes I&#39;ve ever taken at Cal from a pure enjoyment perspective. Efros is a fantastic lecturer and is far more engaging than my other professors. I found the content to be super interesting, he would spend time connecting the techniques we discussed in class to topics in biology and cognitive science. The projects were open ended (little to no starter code) but were fun to write and produced very visually satisfying results. I personally learned a lot even tho I had substantial prerequisite experience (16B &amp; 120), as this class offered a chance to expand upon and apply techniques from those classes on images in projects instead of theorizing about them in problem sets. I would agree with the sentiments posted by Anon. Scale and Atom.</p>\n<p></p>\n<p>I think Anonymous Comp&#39;s followups are an unfair criticism of the class. To me, they show a couple of things:</p>\n<p></p>\n<p>&#34;midterm that never happened, project specs from 1998 designed for matlab, ... etc.&#34;</p>\n<p>They ignored a point that Efros reiterated throughout the semester especially as shelter in place began to happen - that he wants students to focus on and enjoy learning the material, to not freak out about nitty gritty details of grading, and to give the staff (1 prof and 3 gsis for 150 students I think?) a bit of leeway. If you want to shoot for an A/A&#43; with certainty this is not the class for you. It is a legitimate concern- his grading is pretty opague and he openly chides ppl trying to point grub. He says he doesn&#39;t release detailed rubrics with the spec because he doesn&#39;t like students doing the bare minimum to check the boxes instead of exploring/experimenting a bit. But I&#39;d agree with the poster below that there are a lot of worse classes and a lot of profs who actually don&#39;t care about students at all (as opposed to caring a lot about what they talk about in lecture and what you&#39;re learning).</p>\n<p></p>\n<p>Additionally, the Matlab criticism is somewhat disingenuous, as those specs were included in a list of final project ideas which also included well-structured specs with Python starter code. Efros did say some would be easier than others and he was merely providing students with some freedom to explore.</p>\n<p></p>\n<p>&#34;Implementing a bandpass and lowpass filter? Implementing a linear transformation? Implementing another linear transformation?</p>\n<p>Oh wow, now we can add one LPF&#39;ed image to an HPF&#39;ed image? And we can average two linear transformations to make a new halfway image? Amazing! And now let&#39;s spend 3 hours dumping all this stuff into an HTML file!&#34;</p>\n<p></p>\n<p>I think this is an extremely reductionist view of the content and techniques taught in the class (and betrays the arrogance of the poster). Yes, at the core of the project implementations are techniques from linear algebra and signal processing. But implementing these in code is not the same as learning about them in lecture. Obviously the follow-up poster has significant prior experience and maybe that &#34;ruined the magic&#34; of the class for them, but I did too and I found that it only made the content taught in class even more interesting. I think there&#39;s a lot of value in seeing the bandpass filter you learn about in 16b/120 being applied to an image of your choice after only seeing it on lecture slides and paper HWs, and I think it&#39;s beautiful to understand how applying an affine warp on a picture is really just the math we all remember (to varying degrees haha) from 16a married to some clever implementation tricks. The write-ups were somewhat time consuming but I enjoyed the opportunity to showcase my results and additional exploration. If you&#39;re cramped for time, maybe you won&#39;t get as much out of this class as you otherwise would (I took it in my final semester with one other technical). Its a valid concern. But I think it&#39;s a poor argument to complain about the class teaching relatively simple concepts, to Anon. Comp., at least. It&#39;s like being disappointed that the core of a large famous search engine is really just the PageRank hw problem from 16A. Sometimes cool things have pretty simple stuff in the middle. Why not enjoy all the other cool stuff that&#39;s built up around it?</p>\n<p></p>\n<p>TL;DR: class is a blast, lecturer is great, it is worth taking irrespective of your background in SP, chill out and enjoy the ride\u00a0</p>\n<p></p>\n<p>-------</p>\n<p></p>\n<p>Anon comp here: I would definitely not call 16b and 120 extensive background in signal processing and graphics. All this stuff you say about the coolness of implementing these techniques on images isn&#39;t unique to 194-24. In 123 you implement a video compression algorithm from scratch for your final project, which is much more technically interesting than just fiddling with stuff getting it to look cool. Cool math and cool implementations aren&#39;t disjoint, and I was just extremely unimpressed by 194-26 in that the applications weren&#39;t anything I hadn&#39;t seen before and overall the class felt like &#34;image processing for the prerequisite-lacking CS major&#34;. And some of the stuff introduced isn&#39;t even efficient. The method the class teaches you to do a low-pass is to convolve with a gaussian, but this should really be done in the spectral domain to leverage FFT runtime. I know np.convolve is basically built to do this already, but this is another instance of the class only brushing over the super basic stuff just enough for you to get a result that looks cool while giving you little to no understanding of what&#39;s really going on. The spectral implementation of filters is just one of the super important concepts in image processing this course doesn&#39;t cover.</p>\n<p></p>\n<p>There&#39;s so much that&#39;s &#34;under the hood&#34; in image processing that isn&#39;t just coding up math that you learned in other classes. I personally wish this class covered more of that stuff, like the brief intro to perspective geometry at the end. DSP is an example of a class with both interesting math AND super interesting coding projects.\u00a0</p>\n<p></p>\n<p>TD;DR: Don&#39;t take if you&#39;ve done other SP/graphics classes with significant coding. You&#39;ll quickly learn comp photo isn&#39;t anything interesting and is just a slog with an endless barrage of theoretically mindless coding projects.</p>\n<p></p>\n<p>---</p>\n<p></p>\n<p>I&#39;m so sorry the class ended up being a waste of time for someone as talented and enlightened as you especially when it comes to EE. Perhaps the second part of my comment was interpreted in a way that made it seem I was trying to understate the true level of expertise you need to be proficient in the field. I&#39;m not. I took this class for funsies as a 2nd semester senior.</p>\n<p></p>\n<p>I think it&#39;s important that you highlighted the deficiencies that this classes has, obviously it is not intended to be a rigorous, EE-focused image processing class (it&#39;s\u00a0 listed as a CS class after all). I&#39;m not an EE guy myself, just someone who&#39;s taken a bit more of the track than most folks I know, so thanks for letting me and posters here know about the true depth of the field. Obviously the Piazza and much of the student body skew CS so you&#39;re bringing a perspective that many folks don&#39;t have.</p>\n<p></p>\n<p>That being said, I think the attitude in your comments is arrogant and dismissive to many students, including myself, who have tried to offer constructive responses to the question. It is perfectly valid to highlight the relative deficiencies of the class from a theory and/or an implementation perspective, and to share other classes that fill in those gaps. I don&#39;t think it is necessary to adopt such a tone and belittle what you consider trivial techniques just to get your point across. It does not contribute to the discussion. You seem like you really regretted taking the class because of its limitations, which you clearly articulated in your response above mine. Why did it take so long (a student response, 3 followup comments, then rebutting my comment) for you to express these valuable insights? Why do you open by tearing down the things you dislike, instead of offering insights that others in this forum could benefit from?</p>\n<p></p>\n<p>As a student who had a good experience in comp photo along with many other friends and classmates, and no intention of pursuing a career in image processing, I felt obligating to respond to the superfluous belittling and negativity in this post, qualities which are sadly commonplace in this department.\u00a0</p>\n<p></p>\n<p>Thank you for sharing your expertise and opinion. But for the sake of your fellow students, please check the negativity at the door.</p>\n<p></p>\n<p>@OP emailing Efros or his GSIs might be your best bet. I apologize for continuing to derail this discussion- I think there is plenty of valuable info about the class in this thread so I feel no further need to respond. Hope you find everything here helpful in your decision.</p>", "created": "2020-08-09T17:56:29Z", "subject": "", "uid_a": "a_4"}, {"anon": "stud", "content": "<p>I would recommend maybe taking EECS 225B. The content is super similar and the class is logistically a lot less of a mess than 194-26 is.</p>\n<p></p>\n<p>---</p>\n<p></p>\n<p>Personally, 194-26 was one of the most rewarding classes I&#39;ve ever taken at Cal from a pure enjoyment perspective. Efros is a fantastic lecturer and is far more engaging than my other professors. I found the content to be super interesting, he would spend time connecting the techniques we discussed in class to topics in biology and cognitive science. The projects were open ended (little to no starter code) but were fun to write and produced very visually satisfying results. I personally learned a lot even tho I had substantial prerequisite experience (16B &amp; 120), as this class offered a chance to expand upon and apply techniques from those classes on images in projects instead of theorizing about them in problem sets. I would agree with the sentiments posted by Anon. Scale and Atom.</p>\n<p></p>\n<p>I think Anonymous Comp&#39;s followups are an unfair criticism of the class. To me, they show a couple of things:</p>\n<p></p>\n<p>&#34;midterm that never happened, project specs from 1998 designed for matlab, ... etc.&#34;</p>\n<p>They ignored a point that Efros reiterated throughout the semester especially as shelter in place began to happen - that he wants students to focus on and enjoy learning the material, to not freak out about nitty gritty details of grading, and to give the staff (1 prof and 3 gsis for 150 students I think?) a bit of leeway. If you want to shoot for an A/A&#43; with certainty this is not the class for you. It is a legitimate concern- his grading is pretty opague and he openly chides ppl trying to point grub. He says he doesn&#39;t release detailed rubrics with the spec because he doesn&#39;t like students doing the bare minimum to check the boxes instead of exploring/experimenting a bit. But I&#39;d agree with the poster below that there are a lot of worse classes and a lot of profs who actually don&#39;t care about students at all (as opposed to caring a lot about what they talk about in lecture and what you&#39;re learning).</p>\n<p></p>\n<p>Additionally, the Matlab criticism is somewhat disingenuous, as those specs were included in a list of final project ideas which also included well-structured specs with Python starter code. Efros did say some would be easier than others and he was merely providing students with some freedom to explore.</p>\n<p></p>\n<p>&#34;Implementing a bandpass and lowpass filter? Implementing a linear transformation? Implementing another linear transformation?</p>\n<p>Oh wow, now we can add one LPF&#39;ed image to an HPF&#39;ed image? And we can average two linear transformations to make a new halfway image? Amazing! And now let&#39;s spend 3 hours dumping all this stuff into an HTML file!&#34;</p>\n<p></p>\n<p>I think this is an extremely reductionist view of the content and techniques taught in the class (and betrays the arrogance of the poster). Yes, at the core of the project implementations are techniques from linear algebra and signal processing. But implementing these in code is not the same as learning about them in lecture. Obviously the follow-up poster has significant prior experience and maybe that &#34;ruined the magic&#34; of the class for them, but I did too and I found that it only made the content taught in class even more interesting. I think there&#39;s a lot of value in seeing the bandpass filter you learn about in 16b/120 being applied to an image of your choice after only seeing it on lecture slides and paper HWs, and I think it&#39;s beautiful to understand how applying an affine warp on a picture is really just the math we all remember (to varying degrees haha) from 16a married to some clever implementation tricks. The write-ups were somewhat time consuming but I enjoyed the opportunity to showcase my results and additional exploration. If you&#39;re cramped for time, maybe you won&#39;t get as much out of this class as you otherwise would (I took it in my final semester with one other technical). Its a valid concern. But I think it&#39;s a poor argument to complain about the class teaching relatively simple concepts, to Anon. Comp., at least. It&#39;s like being disappointed that the core of a large famous search engine is really just the PageRank hw problem from 16A. Sometimes cool things have pretty simple stuff in the middle. Why not enjoy all the other cool stuff that&#39;s built up around it?</p>\n<p></p>\n<p>TL;DR: class is a blast, lecturer is great, it is worth taking irrespective of your background in SP, chill out and enjoy the ride\u00a0</p>\n<p></p>\n<p>-------</p>\n<p></p>\n<p>Anon comp here: I would definitely not call 16b and 120 extensive background in signal processing and graphics. All this stuff you say about the coolness of implementing these techniques on images isn&#39;t unique to 194-24. In 123 you implement a video compression algorithm from scratch for your final project, which is much more technically interesting than just fiddling with stuff getting it to look cool. Cool math and cool implementations aren&#39;t disjoint, and I was just extremely unimpressed by 194-26 in that the applications weren&#39;t anything I hadn&#39;t seen before and overall the class felt like &#34;image processing for the prerequisite-lacking CS major&#34;. And some of the stuff introduced isn&#39;t even efficient. The method the class teaches you to do a low-pass is to convolve with a gaussian, but this should really be done in the spectral domain to leverage FFT runtime. I know np.convolve is basically built to do this already, but this is another instance of the class only brushing over the super basic stuff just enough for you to get a result that looks cool while giving you little to no understanding of what&#39;s really going on. The spectral implementation of filters is just one of the super important concepts in image processing this course doesn&#39;t cover.</p>\n<p></p>\n<p>There&#39;s so much that&#39;s &#34;under the hood&#34; in image processing that isn&#39;t just coding up math that you learned in other classes. I personally wish this class covered more of that stuff, like the brief intro to perspective geometry at the end. DSP is an example of a class with both interesting math AND super interesting coding projects.\u00a0</p>\n<p></p>\n<p>TD;DR: Don&#39;t take if you&#39;ve done other SP/graphics classes with significant coding. You&#39;ll quickly learn comp photo isn&#39;t anything interesting and is just a slog with an endless barrage of theoretically mindless coding projects.</p>\n<p></p>\n<p>---</p>\n<p></p>\n<p>I&#39;m so sorry the class ended up being a waste of time for someone as talented and enlightened as you especially when it comes to EE. Perhaps the second part of my comment was interpreted in a way that made it seem I was trying to understate the true level of expertise you need to be proficient in the field. I&#39;m not. I took this class for funsies as a 2nd semester senior.</p>\n<p></p>\n<p>I think it&#39;s important that you highlighted the deficiencies that this classes has, obviously it is not intended to be a rigorous, EE-focused image processing class (it&#39;s\u00a0 listed as a CS class after all). I&#39;m not an EE guy myself, just someone who&#39;s taken a bit more of the track than most folks I know, so thanks for letting me and posters here know about the true depth of the field. Obviously the Piazza and much of the student body skew CS so you&#39;re bringing a perspective that many folks don&#39;t have.</p>\n<p></p>\n<p>That being said, I think the attitude in your comments is arrogant and dismissive to many students, including myself, who have tried to offer constructive responses to the question. It is perfectly valid to highlight the relative deficiencies of the class from a theory and/or an implementation perspective, and to share other classes that fill in those gaps. I don&#39;t think it is necessary to adopt such a tone and belittle what you consider trivial techniques just to get your point across. It does not contribute to the discussion. You seem like you really regretted taking the class because of its limitations, which you clearly articulated in your response above mine. Why did it take so long (a student response, 3 followup comments, then rebutting my comment) for you to express these valuable insights? Why do you open by tearing down the things you dislike, instead of offering insights that others in this forum could benefit from?</p>\n<p></p>\n<p>As a student who had a good experience in comp photo along with many other friends and classmates, and no intention of pursuing a career in image processing, I felt obligating to respond to the superfluous belittling and negativity in this post, qualities which are sadly commonplace in this department.</p>\n<p></p>\n<p>Thank you for sharing your expertise and opinion. But for the sake of your fellow students, please check the negativity at the door.</p>", "created": "2020-08-09T17:50:13Z", "subject": "", "uid_a": "a_4"}, {"anon": "stud", "content": "<p>I would recommend maybe taking EECS 225B. The content is super similar and the class is logistically a lot less of a mess than 194-26 is.</p>\n<p></p>\n<p>---</p>\n<p></p>\n<p>Personally, 194-26 was one of the most rewarding classes I&#39;ve ever taken at Cal from a pure enjoyment perspective. Efros is a fantastic lecturer and is far more engaging than my other professors. I found the content to be super interesting, he would spend time connecting the techniques we discussed in class to topics in biology and cognitive science. The projects were open ended (little to no starter code) but were fun to write and produced very visually satisfying results. I personally learned a lot even tho I had substantial prerequisite experience (16B &amp; 120), as this class offered a chance to expand upon and apply techniques from those classes on images in projects instead of theorizing about them in problem sets. I would agree with the sentiments posted by Anon. Scale and Atom.</p>\n<p></p>\n<p>I think Anonymous Comp&#39;s followups are an unfair criticism of the class. To me, they show a couple of things:</p>\n<p></p>\n<p>&#34;midterm that never happened, project specs from 1998 designed for matlab, ... etc.&#34;</p>\n<p>They ignored a point that Efros reiterated throughout the semester especially as shelter in place began to happen - that he wants students to focus on and enjoy learning the material, to not freak out about nitty gritty details of grading, and to give the staff (1 prof and 3 gsis for 150 students I think?) a bit of leeway. If you want to shoot for an A/A&#43; with certainty this is not the class for you. It is a legitimate concern- his grading is pretty opague and he openly chides ppl trying to point grub. He says he doesn&#39;t release detailed rubrics with the spec because he doesn&#39;t like students doing the bare minimum to check the boxes instead of exploring/experimenting a bit. But I&#39;d agree with the poster below that there are a lot of worse classes and a lot of profs who actually don&#39;t care about students at all (as opposed to caring a lot about what they talk about in lecture and what you&#39;re learning).</p>\n<p></p>\n<p>Additionally, the Matlab criticism is somewhat disingenuous, as those specs were included in a list of final project ideas which also included well-structured specs with Python starter code. Efros did say some would be easier than others and he was merely providing students with some freedom to explore.</p>\n<p></p>\n<p>&#34;Implementing a bandpass and lowpass filter? Implementing a linear transformation? Implementing another linear transformation?</p>\n<p>Oh wow, now we can add one LPF&#39;ed image to an HPF&#39;ed image? And we can average two linear transformations to make a new halfway image? Amazing! And now let&#39;s spend 3 hours dumping all this stuff into an HTML file!&#34;</p>\n<p></p>\n<p>I think this is an extremely reductionist view of the content and techniques taught in the class (and betrays the arrogance of the poster). Yes, at the core of the project implementations are techniques from linear algebra and signal processing. But implementing these in code is not the same as learning about them in lecture. Obviously the follow-up poster has significant prior experience and maybe that &#34;ruined the magic&#34; of the class for them, but I did too and I found that it only made the content taught in class even more interesting. I think there&#39;s a lot of value in seeing the bandpass filter you learn about in 16b/120 being applied to an image of your choice after only seeing it on lecture slides and paper HWs, and I think it&#39;s beautiful to understand how applying an affine warp on a picture is really just the math we all remember (to varying degrees haha) from 16a married to some clever implementation tricks. The write-ups were somewhat time consuming but I enjoyed the opportunity to showcase my results and additional exploration. If you&#39;re cramped for time, maybe you won&#39;t get as much out of this class as you otherwise would (I took it in my final semester with one other technical). Its a valid concern. But I think it&#39;s a poor argument to complain about the class teaching relatively simple concepts, to Anon. Comp., at least. It&#39;s like being disappointed that the core of a large famous search engine is really just the PageRank hw problem from 16A. Sometimes cool things have pretty simple stuff in the middle. Why not enjoy all the other cool stuff that&#39;s built up around it?</p>\n<p></p>\n<p>TL;DR: class is a blast, lecturer is great, it is worth taking irrespective of your background in SP, chill out and enjoy the ride\u00a0</p>\n<p></p>\n<p>-------</p>\n<p></p>\n<p>Anon comp here: I would definitely not call 16b and 120 extensive background in signal processing and graphics. All this stuff you say about the coolness of implementing these techniques on images isn&#39;t unique to 194-24. In 123 you implement a video compression algorithm from scratch for your final project, which is much more technically interesting than just fiddling with stuff getting it to look cool. Cool math and cool implementations aren&#39;t disjoint, and I was just extremely unimpressed by 194-26 in that the applications weren&#39;t anything I hadn&#39;t seen before and overall the class felt like &#34;image processing for the prerequisite-lacking CS major&#34;. And some of the stuff introduced isn&#39;t even efficient. The method the class teaches you to do a low-pass is to convolve with a gaussian, but this should really be done in the spectral domain to leverage FFT runtime. I know np.convolve is basically built to do this already, but this is another instance of the class only brushing over the super basic stuff just enough for you to get a result that looks cool while giving you little to no understanding of what&#39;s really going on. The spectral implementation of filters is just one of the super important concepts in image processing this course doesn&#39;t cover.</p>\n<p></p>\n<p>There&#39;s so much that&#39;s &#34;under the hood&#34; in image processing that isn&#39;t just coding up math that you learned in other classes. I personally wish this class covered more of that stuff, like the brief intro to perspective geometry at the end. DSP is an example of a class with both interesting math AND super interesting coding projects.\u00a0</p>\n<p></p>\n<p>TD;DR: Don&#39;t take if you&#39;ve done other SP/graphics classes with significant coding. You&#39;ll quickly learn comp photo isn&#39;t anything interesting and is just a slog with an endless barrage of theoretically mindless coding projects.</p>\n<p></p>\n<p>---</p>\n<p></p>\n<p>I&#39;m so sorry the class ended up being a waste of time for someone as talented and enlightened as you especially when it comes to EE. I think it&#39;s important that you highlighted the deficiencies that this classes has, obviously it is not intended to be a rigorous, EE-focused image processing class (it&#39;s\u00a0 listed as a CS class after all). I&#39;m not an EE guy myself, just someone who&#39;s taken a bit more of the track than most folks I know, so thanks for letting me and posters here know about the true depth of the field. Obviously the Piazza and much of the student body skew CS so you&#39;re bringing a perspective that many folks don&#39;t have.</p>\n<p></p>\n<p>That being said, I think the attitude in your comments is arrogant and dismissive to many students, including myself, who have tried to offer constructive responses to the question. It is perfectly valid to highlight the relative deficiencies of the class from a theory and/or an implementation perspective, and to share other classes that fill in those gaps. I don&#39;t think it is necessary to adopt such a tone and belittle what you consider trivial techniques just to get your point across. It does not contribute to the discussion. You seem like you really regretted taking the class because of its limitations, which you clearly articulated in your response above mine. Why did it take so long (a student response, 3 followup comments, then rebutting my comment) for you to express these valuable insights? Why do you open by tearing down the things you dislike, instead of offering insights that others in this forum could benefit from?</p>\n<p></p>\n<p>As a student who had a good experience in comp photo along with many other friends and classmates, and no intention of pursuing a career in image processing, I felt obligating to respond to the superfluous belittling and negativity in this post, qualities which are sadly commonplace in this department.</p>\n<p></p>\n<p>Thank you for sharing your expertise and opinion. But for the sake of your fellow students, please check the negativity at the door.</p>", "created": "2020-08-09T17:45:59Z", "subject": "", "uid_a": "a_4"}, {"anon": "stud", "content": "<p>I would recommend maybe taking EECS 225B. The content is super similar and the class is logistically a lot less of a mess than 194-26 is.</p>\n<p></p>\n<p>---</p>\n<p></p>\n<p>Personally, 194-26 was one of the most rewarding classes I&#39;ve ever taken at Cal from a pure enjoyment perspective. Efros is a fantastic lecturer and is far more engaging than my other professors. I found the content to be super interesting, he would spend time connecting the techniques we discussed in class to topics in biology and cognitive science. The projects were open ended (little to no starter code) but were fun to write and produced very visually satisfying results. I personally learned a lot even tho I had substantial prerequisite experience (16B &amp; 120), as this class offered a chance to expand upon and apply techniques from those classes on images in projects instead of theorizing about them in problem sets. I would agree with the sentiments posted by Anon. Scale and Atom.</p>\n<p></p>\n<p>I think Anonymous Comp&#39;s followups are an unfair criticism of the class. To me, they show a couple of things:</p>\n<p></p>\n<p>&#34;midterm that never happened, project specs from 1998 designed for matlab, ... etc.&#34;</p>\n<p>They ignored a point that Efros reiterated throughout the semester especially as shelter in place began to happen - that he wants students to focus on and enjoy learning the material, to not freak out about nitty gritty details of grading, and to give the staff (1 prof and 3 gsis for 150 students I think?) a bit of leeway. If you want to shoot for an A/A&#43; with certainty this is not the class for you. It is a legitimate concern- his grading is pretty opague and he openly chides ppl trying to point grub. He says he doesn&#39;t release detailed rubrics with the spec because he doesn&#39;t like students doing the bare minimum to check the boxes instead of exploring/experimenting a bit. But I&#39;d agree with the poster below that there are a lot of worse classes and a lot of profs who actually don&#39;t care about students at all (as opposed to caring a lot about what they talk about in lecture and what you&#39;re learning).</p>\n<p></p>\n<p>Additionally, the Matlab criticism is somewhat disingenuous, as those specs were included in a list of final project ideas which also included well-structured specs with Python starter code. Efros did say some would be easier than others and he was merely providing students with some freedom to explore.</p>\n<p></p>\n<p>&#34;Implementing a bandpass and lowpass filter? Implementing a linear transformation? Implementing another linear transformation?</p>\n<p>Oh wow, now we can add one LPF&#39;ed image to an HPF&#39;ed image? And we can average two linear transformations to make a new halfway image? Amazing! And now let&#39;s spend 3 hours dumping all this stuff into an HTML file!&#34;</p>\n<p></p>\n<p>I think this is an extremely reductionist view of the content and techniques taught in the class (and betrays the arrogance of the poster). Yes, at the core of the project implementations are techniques from linear algebra and signal processing. But implementing these in code is not the same as learning about them in lecture. Obviously the follow-up poster has significant prior experience and maybe that &#34;ruined the magic&#34; of the class for them, but I did too and I found that it only made the content taught in class even more interesting. I think there&#39;s a lot of value in seeing the bandpass filter you learn about in 16b/120 being applied to an image of your choice after only seeing it on lecture slides and paper HWs, and I think it&#39;s beautiful to understand how applying an affine warp on a picture is really just the math we all remember (to varying degrees haha) from 16a married to some clever implementation tricks. The write-ups were somewhat time consuming but I enjoyed the opportunity to showcase my results and additional exploration. If you&#39;re cramped for time, maybe you won&#39;t get as much out of this class as you otherwise would (I took it in my final semester with one other technical). Its a valid concern. But I think it&#39;s a poor argument to complain about the class teaching relatively simple concepts, to Anon. Comp., at least. It&#39;s like being disappointed that the core of a large famous search engine is really just the PageRank hw problem from 16A. Sometimes cool things have pretty simple stuff in the middle. Why not enjoy all the other cool stuff that&#39;s built up around it?</p>\n<p></p>\n<p>TL;DR: class is a blast, lecturer is great, it is worth taking irrespective of your background in SP, chill out and enjoy the ride\u00a0</p>\n<p></p>\n<p>-------</p>\n<p></p>\n<p>Anon comp here: I would definitely not call 16b and 120 extensive background in signal processing and graphics. All this stuff you say about the coolness of implementing these techniques on images isn&#39;t unique to 194-24. In 123 you implement a video compression algorithm from scratch for your final project, which is much more technically interesting than just fiddling with stuff getting it to look cool. Cool math and cool implementations aren&#39;t disjoint, and I was just extremely unimpressed by 194-26 in that the applications weren&#39;t anything I hadn&#39;t seen before and overall the class felt like &#34;image processing for the prerequisite-lacking CS major&#34;. And some of the stuff introduced isn&#39;t even efficient. The method the class teaches you to do a low-pass is to convolve with a gaussian, but this should really be done in the spectral domain to leverage FFT runtime. I know np.convolve is basically built to do this already, but this is another instance of the class only brushing over the super basic stuff just enough for you to get a result that looks cool while giving you little to no understanding of what&#39;s really going on. The spectral implementation of filters is just one of the super important concepts in image processing this course doesn&#39;t cover.</p>\n<p></p>\n<p>There&#39;s so much that&#39;s &#34;under the hood&#34; in image processing that isn&#39;t just coding up math that you learned in other classes. I personally wish this class covered more of that stuff, like the brief intro to perspective geometry at the end. DSP is an example of a class with both interesting math AND super interesting coding projects.\u00a0</p>\n<p></p>\n<p>TD;DR: Don&#39;t take if you&#39;ve done other SP/graphics classes with significant coding. You&#39;ll quickly learn comp photo isn&#39;t anything interesting and is just a slog with an endless barrage of theoretically mindless coding projects.</p>\n<p></p>\n<p>---</p>\n<p></p>\n<p>I&#39;m so sorry the class ended up being a waste of time for someone as talented and enlightened as you especially when it comes to EE. I think it&#39;s important that you highlighted the deficiencies that this classes has, obviously it is not intended to be a rigorous, EE-focused image processing class (it&#39;s\u00a0 listed as a CS class after all). I&#39;m not an EE guy myself, just someone who&#39;s taken a bit more of the track than most folks I know, so thanks for letting me and posters here know about the true depth of the field. Obviously the Piazza and much of the student body skew CS so you&#39;re bringing a perspective that many folks don&#39;t have.</p>\n<p></p>\n<p>That being said, I think the attitude in your comments is arrogant and dismissive to many students, including myself, who have tried to offer constructive responses to the question. It is perfectly valid to highlight the relative deficiencies of the class from a theory and/or an implementation perspective. I don&#39;t think it is necessary to adopt such a tone and belittle what you consider trivial techniques just to get your point across. It does not contribute to the discussion. You seem like you really regretted taking the class because of its limitations, which you clearly articulated in your response above mine. Why did it take so long (a student response, 3 followup comments, then rebutting my comment) for you to express these valuable insights? Why do you open by tearing down the things you dislike, instead of offering insights that others in this forum could benefit from?</p>\n<p></p>\n<p>As a student who had a good experience in comp photo along with many other friends and classmates, and no intention of pursuing a career in image processing, I felt obligating to respond to the superfluous belittling and negativity in this post, qualities which are sadly commonplace in this department.</p>\n<p></p>\n<p>Thank you for sharing your expertise and opinion. But for the sake of your fellow students, please check the negativity at the door.</p>", "created": "2020-08-09T17:42:05Z", "subject": "", "uid_a": "a_4"}, {"anon": "stud", "content": "<p>I would recommend maybe taking EECS 225B. The content is super similar and the class is logistically a lot less of a mess than 194-26 is.</p>\n<p></p>\n<p>---</p>\n<p></p>\n<p>Personally, 194-26 was one of the most rewarding classes I&#39;ve ever taken at Cal from a pure enjoyment perspective. Efros is a fantastic lecturer and is far more engaging than my other professors. I found the content to be super interesting, he would spend time connecting the techniques we discussed in class to topics in biology and cognitive science. The projects were open ended (little to no starter code) but were fun to write and produced very visually satisfying results. I personally learned a lot even tho I had substantial prerequisite experience (16B &amp; 120), as this class offered a chance to expand upon and apply techniques from those classes on images in projects instead of theorizing about them in problem sets. I would agree with the sentiments posted by Anon. Scale and Atom.</p>\n<p></p>\n<p>I think Anonymous Comp&#39;s followups are an unfair criticism of the class. To me, they show a couple of things:</p>\n<p></p>\n<p>&#34;midterm that never happened, project specs from 1998 designed for matlab, ... etc.&#34;</p>\n<p>They ignored a point that Efros reiterated throughout the semester especially as shelter in place began to happen - that he wants students to focus on and enjoy learning the material, to not freak out about nitty gritty details of grading, and to give the staff (1 prof and 3 gsis for 150 students I think?) a bit of leeway. If you want to shoot for an A/A&#43; with certainty this is not the class for you. It is a legitimate concern- his grading is pretty opague and he openly chides ppl trying to point grub. He says he doesn&#39;t release detailed rubrics with the spec because he doesn&#39;t like students doing the bare minimum to check the boxes instead of exploring/experimenting a bit. But I&#39;d agree with the poster below that there are a lot of worse classes and a lot of profs who actually don&#39;t care about students at all (as opposed to caring a lot about what they talk about in lecture and what you&#39;re learning).</p>\n<p></p>\n<p>Additionally, the Matlab criticism is somewhat disingenuous, as those specs were included in a list of final project ideas which also included well-structured specs with Python starter code. Efros did say some would be easier than others and he was merely providing students with some freedom to explore.</p>\n<p></p>\n<p>&#34;Implementing a bandpass and lowpass filter? Implementing a linear transformation? Implementing another linear transformation?</p>\n<p>Oh wow, now we can add one LPF&#39;ed image to an HPF&#39;ed image? And we can average two linear transformations to make a new halfway image? Amazing! And now let&#39;s spend 3 hours dumping all this stuff into an HTML file!&#34;</p>\n<p></p>\n<p>I think this is an extremely reductionist view of the content and techniques taught in the class (and betrays the arrogance of the poster). Yes, at the core of the project implementations are techniques from linear algebra and signal processing. But implementing these in code is not the same as learning about them in lecture. Obviously the follow-up poster has significant prior experience and maybe that &#34;ruined the magic&#34; of the class for them, but I did too and I found that it only made the content taught in class even more interesting. I think there&#39;s a lot of value in seeing the bandpass filter you learn about in 16b/120 being applied to an image of your choice after only seeing it on lecture slides and paper HWs, and I think it&#39;s beautiful to understand how applying an affine warp on a picture is really just the math we all remember (to varying degrees haha) from 16a married to some clever implementation tricks. The write-ups were somewhat time consuming but I enjoyed the opportunity to showcase my results and additional exploration. If you&#39;re cramped for time, maybe you won&#39;t get as much out of this class as you otherwise would (I took it in my final semester with one other technical). Its a valid concern. But I think it&#39;s a poor argument to complain about the class teaching relatively simple concepts, to Anon. Comp., at least. It&#39;s like being disappointed that the core of a large famous search engine is really just the PageRank hw problem from 16A. Sometimes cool things have pretty simple stuff in the middle. Why not enjoy all the other cool stuff that&#39;s built up around it?</p>\n<p></p>\n<p>TL;DR: class is a blast, lecturer is great, it is worth taking irrespective of your background in SP, chill out and enjoy the ride\u00a0</p>\n<p></p>\n<p>-------</p>\n<p></p>\n<p>Anon comp here: I would definitely not call 16b and 120 extensive background in signal processing and graphics. All this stuff you say about the coolness of implementing these techniques on images isn&#39;t unique to 194-24. In 123 you implement a video compression algorithm from scratch for your final project, which is much more technically interesting than just fiddling with stuff getting it to look cool. Cool math and cool implementations aren&#39;t disjoint, and I was just extremely unimpressed by 194-26 in that the applications weren&#39;t anything I hadn&#39;t seen before and overall the class felt like &#34;image processing for the prerequisite-lacking CS major&#34;. And some of the stuff introduced isn&#39;t even efficient. The method the class teaches you to do a low-pass is to convolve with a gaussian, but this should really be done in the spectral domain to leverage FFT runtime. I know np.convolve is basically built to do this already, but this is another instance of the class only brushing over the super basic stuff just enough for you to get a result that looks cool while giving you little to no understanding of what&#39;s really going on. The spectral implementation of filters is just one of the super important concepts in image processing this course doesn&#39;t cover.</p>\n<p></p>\n<p>There&#39;s so much that&#39;s &#34;under the hood&#34; in image processing that isn&#39;t just coding up math that you learned in other classes. I personally wish this class covered more of that stuff, like the brief intro to perspective geometry at the end. DSP is an example of a class with both interesting math AND super interesting coding projects.\u00a0</p>\n<p></p>\n<p>TD;DR: Don&#39;t take if you&#39;ve done other SP/graphics classes with significant coding. You&#39;ll quickly learn comp photo isn&#39;t anything interesting and is just a slog with an endless barrage of theoretically mindless coding projects.</p>", "created": "2020-08-09T17:04:01Z", "subject": "", "uid_a": "a_1"}, {"anon": "stud", "content": "<p>I would recommend maybe taking EECS 225B. The content is super similar and the class is logistically a lot less of a mess than 194-26 is.</p>\n<p></p>\n<p>---</p>\n<p></p>\n<p>Personally, 194-26 was one of the most rewarding classes I&#39;ve ever taken at Cal from a pure enjoyment perspective. Efros is a fantastic lecturer and is far more engaging than my other professors. I found the content to be super interesting, he would spend time connecting the techniques we discussed in class to topics in biology and cognitive science. The projects were open ended (little to no starter code) but were fun to write and produced very visually satisfying results. I personally learned a lot even tho I had substantial prerequisite experience (16B &amp; 120), as this class offered a chance to expand upon and apply techniques from those classes on images in projects instead of theorizing about them in problem sets. I would agree with the sentiments posted by Anon. Scale and Atom.</p>\n<p></p>\n<p>I think Anonymous Comp&#39;s followups are an unfair criticism of the class. To me, they show a couple of things:</p>\n<p></p>\n<p>&#34;midterm that never happened, project specs from 1998 designed for matlab, ... etc.&#34;</p>\n<p>They ignored a point that Efros reiterated throughout the semester especially as shelter in place began to happen - that he wants students to focus on and enjoy learning the material, to not freak out about nitty gritty details of grading, and to give the staff (1 prof and 3 gsis for 150 students I think?) a bit of leeway. If you want to shoot for an A/A&#43; with certainty this is not the class for you. It is a legitimate concern- his grading is pretty opague and he openly chides ppl trying to point grub. He says he doesn&#39;t release detailed rubrics with the spec because he doesn&#39;t like students doing the bare minimum to check the boxes instead of exploring/experimenting a bit. But I&#39;d agree with the poster below that there are a lot of worse classes and a lot of profs who actually don&#39;t care about students at all (as opposed to caring a lot about what they talk about in lecture and what you&#39;re learning).</p>\n<p></p>\n<p>Additionally, the Matlab criticism is somewhat disingenuous, as those specs were included in a list of final project ideas which also included well-structured specs with Python starter code. Efros did say some would be easier than others and he was merely providing students with some freedom to explore.</p>\n<p></p>\n<p>&#34;Implementing a bandpass and lowpass filter? Implementing a linear transformation? Implementing another linear transformation?</p>\n<p>Oh wow, now we can add one LPF&#39;ed image to an HPF&#39;ed image? And we can average two linear transformations to make a new halfway image? Amazing! And now let&#39;s spend 3 hours dumping all this stuff into an HTML file!&#34;</p>\n<p></p>\n<p>I think this is an extremely reductionist view of the content and techniques taught in the class (and betrays the arrogance of the poster). Yes, at the core of the project implementations are techniques from linear algebra and signal processing. But implementing these in code is not the same as learning about them in lecture. Obviously the follow-up poster has significant prior experience and maybe that &#34;ruined the magic&#34; of the class for them, but I did too and I found that it only made the content taught in class even more interesting. I think there&#39;s a lot of value in seeing the bandpass filter you learn about in 16b/120 being applied to an image of your choice after only seeing it on lecture slides and paper HWs, and I think it&#39;s beautiful to understand how applying an affine warp on a picture is really just the math we all remember (to varying degrees haha) from 16a married to some clever implementation tricks. The write-ups were somewhat time consuming but I enjoyed the opportunity to showcase my results and additional exploration. If you&#39;re cramped for time, maybe you won&#39;t get as much out of this class as you otherwise would (I took it in my final semester with one other technical). Its a valid concern. But I think it&#39;s a poor argument to complain about the class teaching relatively simple concepts, to Anon. Comp., at least. It&#39;s like being disappointed that the core of a large famous search engine is really just the PageRank hw problem from 16A. Sometimes cool things have pretty simple stuff in the middle. Why not enjoy all the other cool stuff that&#39;s built up around it?</p>\n<p></p>\n<p>TL;DR: class is a blast, lecturer is great, it is worth taking irrespective of your background in SP, chill out and enjoy the ride\u00a0</p>\n<p></p>\n<p>-------</p>\n<p></p>\n<p>Anon comp here: I would definitely not call 16b and 120 extensive background in signal processing and graphics. All this stuff you say about the coolness of implementing these techniques on images isn&#39;t unique to 194-24. In 123 you implement a video compression algorithm from scratch for your final project, which is much more technically interesting than just fiddling with stuff getting it to look cool. Cool math and cool implementations aren&#39;t disjoint, and I was just extremely unimpressed by 194-26 in that the applications weren&#39;t anything I hadn&#39;t seen before and overall the class felt like &#34;image processing for the prerequisite-lacking CS major&#34;. And some of the stuff introduced isn&#39;t even efficient. The method the class teaches you to do a low-pass is to convolve with a gaussian, but this should really be done in the spectral domain to leverage FFT runtime.</p>\n<p></p>\n<p>There&#39;s so much that&#39;s &#34;under the hood&#34; in image processing that isn&#39;t just coding up math that you learned in other classes. I personally wish this class covered more of that stuff, like the brief intro to perspective geometry at the end. DSP is an example of a class with both interesting math AND super interesting coding projects.\u00a0</p>\n<p></p>\n<p>TD;DR: Don&#39;t take if you&#39;ve done other SP/graphics classes with significant coding. You&#39;ll quickly learn comp photo isn&#39;t anything interesting and is just a slog with an endless barrage of theoretically mindless coding projects.</p>", "created": "2020-08-09T16:52:26Z", "subject": "", "uid_a": "a_1"}, {"anon": "stud", "content": "<p>I would recommend maybe taking EECS 225B. The content is super similar and the class is logistically a lot less of a mess than 194-26 is.</p>\n<p></p>\n<p>---</p>\n<p></p>\n<p>Personally, 194-26 was one of the most rewarding classes I&#39;ve ever taken at Cal from a pure enjoyment perspective. Efros is a fantastic lecturer and is far more engaging than my other professors. I found the content to be super interesting, he would spend time connecting the techniques we discussed in class to topics in biology and cognitive science. The projects were open ended (little to no starter code) but were fun to write and produced very visually satisfying results. I personally learned a lot even tho I had substantial prerequisite experience (16B &amp; 120), as this class offered a chance to expand upon and apply techniques from those classes on images in projects instead of theorizing about them in problem sets. I would agree with the sentiments posted by Anon. Scale and Atom.</p>\n<p></p>\n<p>I think Anonymous Comp&#39;s followups are an unfair criticism of the class. To me, they show a couple of things:</p>\n<p></p>\n<p>&#34;midterm that never happened, project specs from 1998 designed for matlab, ... etc.&#34;</p>\n<p>They ignored a point that Efros reiterated throughout the semester especially as shelter in place began to happen - that he wants students to focus on and enjoy learning the material, to not freak out about nitty gritty details of grading, and to give the staff (1 prof and 3 gsis for 150 students I think?) a bit of leeway. If you want to shoot for an A/A&#43; with certainty this is not the class for you. It is a legitimate concern- his grading is pretty opague and he openly chides ppl trying to point grub. He says he doesn&#39;t release detailed rubrics with the spec because he doesn&#39;t like students doing the bare minimum to check the boxes instead of exploring/experimenting a bit. But I&#39;d agree with the poster below that there are a lot of worse classes and a lot of profs who actually don&#39;t care about students at all (as opposed to caring a lot about what they talk about in lecture and what you&#39;re learning).</p>\n<p></p>\n<p>Additionally, the Matlab criticism is somewhat disingenuous, as those specs were included in a list of final project ideas which also included well-structured specs with Python starter code. Efros did say some would be easier than others and he was merely providing students with some freedom to explore.</p>\n<p></p>\n<p>&#34;Implementing a bandpass and lowpass filter? Implementing a linear transformation? Implementing another linear transformation?</p>\n<p>Oh wow, now we can add one LPF&#39;ed image to an HPF&#39;ed image? And we can average two linear transformations to make a new halfway image? Amazing! And now let&#39;s spend 3 hours dumping all this stuff into an HTML file!&#34;</p>\n<p></p>\n<p>I think this is an extremely reductionist view of the content and techniques taught in the class (and betrays the arrogance of the poster). Yes, at the core of the project implementations are techniques from linear algebra and signal processing. But implementing these in code is not the same as learning about them in lecture. Obviously the follow-up poster has significant prior experience and maybe that &#34;ruined the magic&#34; of the class for them, but I did too and I found that it only made the content taught in class even more interesting. I think there&#39;s a lot of value in seeing the bandpass filter you learn about in 16b/120 being applied to an image of your choice after only seeing it on lecture slides and paper HWs, and I think it&#39;s beautiful to understand how applying an affine warp on a picture is really just the math we all remember (to varying degrees haha) from 16a married to some clever implementation tricks. The write-ups were somewhat time consuming but I enjoyed the opportunity to showcase my results and additional exploration. If you&#39;re cramped for time, maybe you won&#39;t get as much out of this class as you otherwise would (I took it in my final semester with one other technical). Its a valid concern. But I think it&#39;s a poor argument to complain about the class teaching relatively simple concepts, to Anon. Comp., at least. It&#39;s like being disappointed that the core of a large famous search engine is really just the PageRank hw problem from 16A. Sometimes cool things have pretty simple stuff in the middle. Why not enjoy all the other cool stuff that&#39;s built up around it?</p>\n<p></p>\n<p>TL;DR: class is a blast, lecturer is great, it is worth taking irrespective of your background in SP, chill out and enjoy the ride\u00a0</p>", "created": "2020-08-09T15:50:58Z", "subject": "", "uid_a": "a_4"}, {"anon": "stud", "content": "<p>I would recommend maybe taking EECS 225B. The content is super similar and the class is logistically a lot less of a mess than 194-26 is.</p>\n<p></p>\n<p>---</p>\n<p></p>\n<p>Personally, 194-26 was one of the most rewarding classes I&#39;ve ever taken at Cal from a pure enjoyment perspective. Efros is a fantastic lecturer and is far more engaging than my other professors. I found the content to be super interesting, he would spend time connecting the techniques we discussed in class to topics in biology and cognitive science. The projects were open ended (little to no starter code) but were fun to write and produced very visually satisfying results. I personally learned a lot even tho I had substantial prerequisite experience (16B &amp; 120), as this class offered a chance to expand upon and apply techniques from those classes on images in projects instead of theorizing about them in problem sets. I would agree with the sentiments posted by Anon. Scale and Atom.</p>\n<p></p>\n<p>I think Anonymous Comp&#39;s followups are an unfair criticism of the class. To me, they show a couple of things:</p>\n<p></p>\n<p>&#34;midterm that never happened, project specs from 1998 designed for matlab, ... etc.&#34;</p>\n<p>They ignored a point that Efros reiterated throughout the semester especially as shelter in place began to happen - that he wants students to focus on and enjoy learning the material, to not freak out about nitty gritty details of grading, and to give the staff (1 prof and 3 gsis for 150 students I think?). If you want to shoot for an A/A&#43; with certainty this is not the class for you. It is a legitimate concern- his grading is pretty opague and he openly chides ppl trying to point grub. He says he doesn&#39;t release detailed rubrics with the spec because he doesn&#39;t like students doing the bare minimum to check the boxes instead of exploring/experimenting a bit. But I&#39;d agree with the poster below that there are a lot of worse classes and a lot of profs who actually don&#39;t care about students at all (as opposed to caring a lot about what they talk about in lecture and what you&#39;re learning).</p>\n<p></p>\n<p>Additionally, the Matlab criticism is somewhat disingenuous, as those specs were included in a list of final project ideas which also included well-structured specs with Python starter code. Efros did say some would be easier than others and he was merely providing students with some freedom to explore.</p>\n<p></p>\n<p>&#34;Implementing a bandpass and lowpass filter? Implementing a linear transformation? Implementing another linear transformation?</p>\n<p>Oh wow, now we can add one LPF&#39;ed image to an HPF&#39;ed image? And we can average two linear transformations to make a new halfway image? Amazing! And now let&#39;s spend 3 hours dumping all this stuff into an HTML file!&#34;</p>\n<p></p>\n<p>I think this is an extremely reductionist view of the content and techniques taught in the class (and betrays the arrogance of the poster). Yes, at the core of the project implementations are techniques from linear algebra and signal processing. But implementing these in code is not the same as learning about them in lecture. Obviously the follow-up poster has significant prior experience and maybe that &#34;ruined the magic&#34; of the class for them, but I did too and I found that it only made the content taught in class even more interesting. I think there&#39;s a lot of value in seeing the bandpass filter you learn about in 16b/120 being applied to an image of your choice after only seeing it on lecture slides and paper HWs, and I think it&#39;s beautiful to understand how applying an affine warp on a picture is really just the math we all remember (to varying degrees haha) from 16a married to some clever implementation tricks. The write-ups were somewhat time consuming but I enjoyed the opportunity to showcase my results and additional exploration. If you&#39;re cramped for time, maybe you won&#39;t get as much out of this class as you otherwise would (I took it in my final semester with one other technical). Its a valid concern. But I think it&#39;s a poor argument to complain about the class teaching relatively simple concepts, to Anon. Comp., at least. It&#39;s like being disappointed that the core of a large famous search engine is really just the PageRank hw problem from 16A. Sometimes cool things have pretty simple stuff in the middle. Why not enjoy all the other cool stuff that&#39;s built up around it?</p>\n<p></p>\n<p>TL;DR: class is a blast, lecturer is great, it is worth taking irrespective of your background in SP, chill out and enjoy the ride\u00a0</p>", "created": "2020-08-09T15:48:53Z", "subject": "", "uid_a": "a_4"}, {"anon": "stud", "content": "<p>I would recommend maybe taking EECS 225B. The content is super similar and the class is logistically a lot less of a mess than 194-26 is.</p>", "created": "2020-08-08T15:45:56Z", "subject": "", "uid_a": "a_1"}], "history_size": 10, "id": "kdltyf85x5d616", "is_tag_endorse": false, "tag_endorse": [{"admin": false, "endorser": {}, "facebook_id": null, "id": "jzlnpfrl2qk2e6", "name": "Justin Xia", "photo": null, "photo_url": null, "published": true, "role": "student", "us": false}], "tag_endorse_arr": ["jzlnpfrl2qk2e6"], "type": "s_answer"}, {"anon": "stud", "bucket_name": "Week 8/2 - 8/8", "bucket_order": 57, "children": [{"anon": "stud", "bucket_name": "Week 8/2 - 8/8", "bucket_order": 57, "children": [], "config": {}, "created": "2020-08-08T21:41:42Z", "data": {"embed_links": null}, "folders": [], "id": "kdm6nxc8jr7mt", "subject": "<p>Unresponsive/unhelpful GSIs, pop quizzes, midterm that never happened, project specs from 1998 designed for matlab, ... etc. Definitely one of the worse run classes in the department, though I guess that&#39;s to be expected since it&#39;s a 194 so by definition less polished.</p>", "tag_good": [], "tag_good_arr": [], "type": "feedback", "uid_a": "a_1", "updated": "2020-08-08T21:41:42Z"}, {"anon": "stud", "bucket_name": "Week 8/2 - 8/8", "bucket_order": 57, "children": [], "config": {}, "created": "2020-08-08T21:59:32Z", "data": {"embed_links": null}, "folders": [], "id": "kdm7av63irz33h", "subject": "If you&#39;re referring to this being the case last semester, most of those issues were mainly a result of the chaotic circumstances (with the exception of some MATLAB legacy code which was for the most part optional). I don&#39;t think the class is normally &#34;logistically a mess&#34; and disagree with your sentiment that it was one of the worse run classes. (I&#39;ve seen way worse.) I personally enjoyed it quite a bit. It&#39;s unfortunate that you didn&#39;t enjoy it as much", "tag_good": [], "tag_good_arr": [], "type": "feedback", "uid_a": "a_3", "updated": "2020-08-08T21:59:32Z"}, {"anon": "stud", "bucket_name": "Week 8/2 - 8/8", "bucket_order": 57, "children": [], "config": {}, "created": "2020-08-08T22:00:56Z", "data": {"embed_links": null}, "folders": [], "id": "kdm7cnzxnyk3n7", "subject": "<p>Hmm interesting criticism. 194-26 was one of my favorite classes! Fascinating projects that are actually made by you from scratch instead of other courses where you have so much starter code, witty lecturer with great insight into both historical and modern techniques, and a focus on self reliance that showcases your growth as a student from freshman/sophomore level courses. And all projects could be done with python, as opposed to EECS225B which forces you to use matlab.\u00a0</p>\n<p></p>\n<p>I loved how at the end of the semester I had multiple projects that were my own and webpages showcasing those projects.</p>", "tag_good": [], "tag_good_arr": [], "type": "feedback", "uid_a": "a_2", "updated": "2020-08-08T22:00:56Z"}, {"anon": "stud", "bucket_name": "Week 8/2 - 8/8", "bucket_order": 57, "children": [], "config": {}, "created": "2020-08-08T22:06:33Z", "data": {"embed_links": null}, "folders": [], "id": "kdm7jw5m7qp6ge", "subject": "<p>&#43;1 on Anonymous Scale. Definitely one of my favorite classes. Efros is a wonderful lecturer and was extraordinarily engaging (esp given the circumstances of COVID/online). The projects can be difficult because they&#39;re effectively from scratch, but you learn so much from the ground up in the process. (To clarify on my point on the MATLAB bit, some projects had starter code in MATLAB but you didn&#39;t need to use it as far as I know and could easily get by with Python if you wanted to.)</p>", "tag_good": [], "tag_good_arr": [], "type": "feedback", "uid_a": "a_3", "updated": "2020-08-08T22:06:33Z"}, {"anon": "stud", "bucket_name": "Week 8/2 - 8/8", "bucket_order": 57, "children": [], "config": {}, "created": "2020-08-08T22:06:40Z", "data": {"embed_links": null}, "folders": [], "id": "kdm7k1fzkrs6i6", "subject": "<p>Implementing a bandpass and lowpass filter? Implementing a linear transformation? Implementing another linear transformation?</p>\n<p></p>\n<p>Oh wow, now we can add one LPF&#39;ed image to an HPF&#39;ed image? And we can average two linear transformations to make a new halfway image? Amazing! And now let&#39;s spend 3 hours dumping all this stuff into an HTML file!</p>", "tag_good": [], "tag_good_arr": [], "type": "feedback", "uid_a": "a_1", "updated": "2020-08-08T22:06:40Z"}, {"anon": "stud", "bucket_name": "Week 8/2 - 8/8", "bucket_order": 57, "children": [], "config": {}, "created": "2020-08-08T22:07:02Z", "data": {"embed_links": null}, "folders": [], "id": "kdm7kia7r7q6ni", "subject": "<p>You could have taught yourself this class if you took digital signal processing and graphics.</p>", "tag_good": [], "tag_good_arr": [], "type": "feedback", "uid_a": "a_1", "updated": "2020-08-08T22:07:02Z"}], "config": {}, "created": "2020-08-08T21:33:27Z", "data": {"embed_links": null}, "folders": [], "id": "kdm6dblty771s", "no_answer": 0, "no_upvotes": 0, "subject": "<p>hmm what do you mean 194-26 is logistically a mess? @anonymous comp</p>", "tag_good": [], "tag_good_arr": [], "type": "followup", "uid_a": "a_2", "updated": "2020-08-08T21:33:27Z"}], "config": {"seen": {"11946": 9, "11957": 8, "1296": 1, "1358": 2, "1478": 6, "1540": 5, "1575": 7, "6805": 4, "7059": 3, "7451": 0}}, "created": "2020-08-06T18:02:01Z", "data": {"embed_links": []}, "default_anonymity": "no", "drafts": null, "folders": ["enrollments"], "history": [{"anon": "stud", "content": "<md>How likely will cs194-26 expand? I'm on waitlist position 37. Will I get in to the class?</md>", "created": "2020-08-06T18:02:01Z", "subject": "How likely will cs194-26 expand?", "uid_a": "a_0"}], "history_size": 1, "i_edits": [], "id": "kdj3xpvwoze5qm", "is_bookmarked": false, "is_tag_good": false, "my_favorite": false, "no_answer": 0, "no_answer_followup": 0, "nr": 12835, "num_favorites": 1, "q_edits": [], "request_instructor": 0, "request_instructor_me": false, "s_edits": [], "status": "active", "t": 1654542886329, "tag_good": [{"admin": false, "endorser": {}, "facebook_id": null, "id": "jzlnpfrl2qk2e6", "name": "Justin Xia", "photo": null, "photo_url": null, "published": true, "role": "student", "us": false}], "tag_good_arr": ["jzlnpfrl2qk2e6"], "tags": ["enrollments", "student"], "type": "question", "unique_views": 433}