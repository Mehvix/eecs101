{"bookmarked": 9, "bucket_name": "Today", "bucket_order": 3, "change_log": [{"anon": "stud", "data": "k4hr05s6x1pp", "type": "create", "uid_a": "a_0", "when": "2019-12-23T01:14:53Z"}, {"anon": "no", "data": "k4hsm5vn145ma", "to": "k4hr05s2gcq1po", "type": "s_answer", "uid": "jjs6ge7urqc129", "when": "2019-12-23T01:59:59Z"}, {"anon": "stud", "data": "k4hsmeof5pq4sl", "type": "update", "uid_a": "a_0", "when": "2019-12-23T02:00:10Z"}, {"anon": "stud", "to": "k4hr05s2gcq1po", "type": "followup", "uid_a": "a_0", "when": "2019-12-23T02:02:59Z"}, {"anon": "no", "data": "k4hsqak9pl7562", "type": "s_answer_update", "uid": "jjs6ge7urqc129", "when": "2019-12-23T02:03:12Z"}, {"anon": "no", "data": "k4hsqyiwq435dp", "type": "s_answer_update", "uid": "jjs6ge7urqc129", "when": "2019-12-23T02:03:43Z"}, {"anon": "no", "to": "k4hr05s2gcq1po", "type": "feedback", "uid": "jjs6ge7urqc129", "when": "2019-12-23T02:03:51Z"}, {"anon": "no", "data": "k4hszze0wd56g", "type": "s_answer_update", "uid": "jjs6ge7urqc129", "when": "2019-12-23T02:10:44Z"}, {"anon": "no", "data": "k4ht1di8j0am2", "type": "s_answer_update", "uid": "jjs6ge7urqc129", "when": "2019-12-23T02:11:49Z"}, {"anon": "no", "data": "k4ht3mv1ku31aa", "type": "s_answer_update", "uid": "jjs6ge7urqc129", "when": "2019-12-23T02:13:34Z"}, {"anon": "no", "data": "k4ht4c88k81hv", "type": "s_answer_update", "uid": "jjs6ge7urqc129", "when": "2019-12-23T02:14:07Z"}, {"anon": "no", "data": "k4ht4y4daua3l4", "type": "s_answer_update", "uid": "jjs6ge7urqc129", "when": "2019-12-23T02:14:35Z"}, {"anon": "stud", "to": "k4hr05s2gcq1po", "type": "feedback", "uid_a": "a_0", "when": "2019-12-24T02:26:35Z"}, {"anon": "stud", "to": "k4hr05s2gcq1po", "type": "followup", "uid_a": "a_1", "when": "2019-12-26T06:42:01Z"}, {"anon": "stud", "to": "k4hr05s2gcq1po", "type": "feedback", "uid_a": "a_2", "when": "2020-01-03T07:02:14Z"}, {"anon": "stud", "to": "k4hr05s2gcq1po", "type": "followup", "uid_a": "a_2", "when": "2020-01-03T07:04:20Z"}, {"anon": "stud", "to": "k4hr05s2gcq1po", "type": "followup", "uid_a": "a_3", "when": "2020-01-03T18:26:26Z"}], "children": [{"bucket_name": "Today", "bucket_order": 3, "children": [], "config": {}, "created": "2019-12-23T01:59:59Z", "data": {"embed_links": []}, "folders": [], "history": [{"anon": "no", "content": "<p>Refer to &#64;10936.</p>\n<p></p>\n<p>In addition to those answers, I would just want to add that knowing how to program in Java or not knowing how to program in Java has absolutely no role in this class, except for the first few lectures when the professors talk about Java and its semantics a bit, like static and dynamic typing.</p>\n<p></p>\n<p>Watching Hug&#39;s videos is not at all a bad idea. The only fundamental difference between PNH&#39;s and Hug&#39;s version is that PNH&#39;s iteration is more project-heavy and not so test-heavy, whereas the opposite is the case with Hug. The content the two cover is the same, except a few extra things that one covers and the other doesn&#39;t, like PNH introduces some concepts of CS 188 (Introduction to Artificial Intelligence) like Game Trees, Alpha-Beta pruning, Heuristic values etc. whereas Hug spends few lectures talking about concepts of Software Engineering.</p>\n<p></p>\n<p>For Hilfinger&#39;s iteration, the best preparation you can do is to improve your thinking and decision-making skills. The projects require an immense application of these, because they are given with almost negligible Skeleton code, except some of the gaming projects where the Utils are important. In my answers on &#64;10936 I also recommended to look over Fall 2019 Projects and try envisioning them in Python. It maybe a daunting task, because these objects rely heavily on Java&#39;s objected oriented nature. But it is doable. Try working over Signpost if you can. It is considered to be the toughest project of this semester and it was supposed to be a small exercise on Java in the beginning and hence it was Project 0. But it turned out to be a nightmare. The rest 3 projects were challenging, but very doable and much more structured nicely.</p>\n<p></p>\n<p>You can read Hilfinger&#39;s book as well on Data Structures that can be found on the Fall 2019 page or any resources page.</p>\n<p></p>\n<p>Most importantly and I cannot emphasize this enough, <strong>Start the projects early. </strong>Due to the limited availability of resources, 61B had less staff this semester and hence OH were very crowded. So start early and clear all your conceptual doubts before you even write a single line of Java code. Go to labs, a lot of them discuss design ideas, approaches and that really helps in getting a headstart on the projects.</p>\n<p></p>\n<p>Hope this helps! Feel free to post follow-ups down here, if you have any more questions.</p>", "created": "2019-12-23T02:14:35Z", "subject": "", "uid": "jjs6ge7urqc129"}, {"anon": "no", "content": "<p>Refer to &#64;10936.</p>\n<p></p>\n<p>In addition to those answers, I would just want to add that knowing how to program in Java or not knowing how to program in Java has absolutely no role in this class, except for the first few lectures when the professors talk about Java and its semantics a bit, like static and dynamic typing.</p>\n<p></p>\n<p>Watching Hug&#39;s videos is not at all a bad idea. The only fundamental difference between PNH&#39;s and Hug&#39;s version is that PNH&#39;s iteration is more project-heavy and not so test-heavy, whereas the opposite is the case with Hug. The content the two cover is the same, except a few extra things that one covers and the other doesn&#39;t, like PNH introduces some concepts of CS 188 (Introduction to Artificial Intelligence) like Game Trees, Alpha-Beta pruning, Heuristic values etc. whereas Hug spends few lectures talking about concepts of Software Engineering.</p>\n<p></p>\n<p>For Hilfinger&#39;s iteration, the best preparation you can do is to improve your thinking and decision-making skills. The projects require an immense application of these, because they are given with almost negligible Skeleton code, except some of the gaming projects where the Utils are important. In my answers on &#64;10936 I also recommended to look over Fall 2019 Projects and try envisioning them in Python. It maybe a daunting task, because these objects rely heavily on Java&#39;s objected oriented nature. But it is doable. Try working over Signpost if you can. It is considered to be the toughest project of this semester and it was supposed to be a finger exercise in the beginning and hence it was Project 0. But it turned out to be a nightmare. The rest 3 projects were challenging, but very doable and much more structured nicely.</p>\n<p></p>\n<p>You can read Hilfinger&#39;s book as well on Data Structures that can be found on the Fall 2019 page or any resources page.</p>\n<p></p>\n<p>Most importantly and I cannot emphasize this enough, <strong>Start the projects early. </strong>Due to the limited availability of resources, 61B had less staff this semester and hence OH were very crowded. So start early and clear all your conceptual doubts before you even write a single line of Java code. Go to labs, a lot of them discuss design ideas, approaches and that really helps in getting a headstart on the projects.</p>\n<p></p>\n<p>Hope this helps! Feel free to post follow-ups down here, if you have any more questions.</p>", "created": "2019-12-23T02:14:07Z", "subject": "", "uid": "jjs6ge7urqc129"}, {"anon": "no", "content": "<p>Refer to &#64;10936.</p>\n<p></p>\n<p>In addition to those answers, I would just want to add that knowing how to program in Java or not knowing how to program in Java has absolutely no role in this class, except for the first few lectures when the professors talk about Java and its semantics a bit, like static and dynamic typing.</p>\n<p></p>\n<p>Watching Hug&#39;s videos is not at all a bad idea. The only fundamental difference between PNH&#39;s and Hug&#39;s version is that PNH&#39;s iteration is more project-heavy and not so test-heavy, whereas the opposite is the case with Hug. The content the two cover is the same, except a few extra things that one covers and the other doesn&#39;t, like PNH introduces some concepts of CS 188 (Introduction to Artificial Intelligence) like Game Trees, Alpha-Beta pruning, Heuristic values etc. whereas Hug spends few lectures talking about concepts of Software Engineering.</p>\n<p></p>\n<p>For Hilfinger&#39;s iteration, the best preparation you can do is to improve your thinking and decision-making skills. The projects require an immense application of these, because they are given with almost negligible Skeleton code, except some of the gaming projects where the Utils are important. In my answers on &#64;10936 I also recommended to look over Fall 2019 Projects and try envisioning them in Python. It maybe a daunting task, because these objects rely heavily on Java&#39;s objected oriented nature. But it is doable. Try working over Signpost if you can. It is considered to be the toughest project of this semester and it was supposed to be a fingering exercise in the beginning and hence it was Project 0. But it turned out to be a nightmare. The rest 3 projects were challenging, but very doable and much more structured nicely. </p>\n<p></p>\n<p>You can read Hilfinger&#39;s book as well on Data Structures that can be found on the Fall 2019 page or any resources page.</p>\n<p></p>\n<p>Most importantly and I cannot emphasize this enough, <strong>Start the projects early. </strong>Due to the limited availability of resources, 61B had less staff this semester and hence OH were very crowded. So start early and clear all your conceptual doubts before you even write a single line of Java code. Go to labs, a lot of them discuss design ideas, approaches and that really helps in getting a headstart on the projects.</p>\n<p></p>\n<p>Hope this helps! Feel free to post follow-ups down here, if you have any more questions.</p>", "created": "2019-12-23T02:13:34Z", "subject": "", "uid": "jjs6ge7urqc129"}, {"anon": "no", "content": "<p>Refer to &#64;10936.</p>\n<p></p>\n<p>In addition to those answers, I would just want to add that knowing how to program in Java or not knowing how to program in Java has absolutely no role in this class, except for the first few lectures when the professors talk about Java and its semantics a bit, like static and dynamic typing.</p>\n<p></p>\n<p>Watching Hug&#39;s videos is not at all a bad idea. The only fundamental difference between PNH&#39;s and Hug&#39;s version is that PNH&#39;s iteration is more project-heavy and not so test-heavy, whereas the opposite is the case with Hug. The content the two cover is the same, except a few extra things that one covers and the other doesn&#39;t, like PNH introduces some concepts of CS 188 (Introduction to Artificial Intelligence) like Game Trees, Alpha-Beta pruning, Heuristic values etc. whereas Hug spends few lectures talking about concepts of Software Engineering.</p>\n<p></p>\n<p>For Hilfinger&#39;s iteration, the best preparation you can do is to improve your thinking and decision-making skills. The projects require an immense application of these, because they are given with almost negligible Skeleton code, except some of the gaming projects where the Utils are important. In my answers on &#64;10936 I also recommended to look over Fall 2019 Projects and try envisioning them in Python. It maybe a daunting task, because these objects rely heavily on Java&#39;s objected oriented nature.</p>\n<p></p>\n<p>You can read Hilfinger&#39;s book as well on Data Structures that can be found on the Fall 2019 page or any resources page.</p>\n<p></p>\n<p>Most importantly and I cannot emphasize this enough, <strong>Start the projects early. </strong>Due to the limited availability of resources, 61B had less staff this semester and hence OH were very crowded. So start early and clear all your conceptual doubts before you even write a single line of Java code. Go to labs, a lot of them discuss design ideas, approaches and that really helps in getting a headstart on the projects.</p>\n<p></p>\n<p>Hope this helps! Feel free to post follow-ups down here, if you have any more questions.</p>", "created": "2019-12-23T02:11:49Z", "subject": "", "uid": "jjs6ge7urqc129"}, {"anon": "no", "content": "<p>Refer to &#64;10936.</p>\n<p></p>\n<p>In addition to those answers, I would just want to add that knowing how to program in Java or not knowing how to program in Java has absolutely no role in this class, except for the first few lectures when the professors talk about Java and its semantics a bit, like static and dynamic typing.</p>\n<p></p>\n<p>Watching Hug&#39;s videos is not at all a bad idea. The only fundamental difference between PNH&#39;s and Hug&#39;s version is that PNH&#39;s iteration is more project-heavy and not so test-heavy, whereas the opposite is the case with Hug. The content the two cover is the same, except a few extra things that one covers and the other doesn&#39;t, like PNH introduces some concepts of CS 188 (Introduction to Artificial Intelligence) like Game Trees, Alpha-Beta pruning, Heuristic values etc. whereas Hug spends few lectures talking about concepts of Software Engineering. </p>\n<p></p>\n<p>For Hilfinger&#39;s iteration, the best preparation you can do is to improve your thinking and decision-making skills. The projects require an immense application of these, because they are given with almost useless Skeleton code, except some of the gaming projects where the Utils are important. In my answers on &#64;10936 I also recommended to look over Fall 2019 Projects and try envisioning them in Python. It maybe a daunting task, because these objects rely heavily on Java&#39;s objected oriented nature.</p>\n<p></p>\n<p>You can read Hilfinger&#39;s book as well on Data Structures that can be found on the Fall 2019 page or any resources page.</p>\n<p></p>\n<p>Most importantly and I cannot emphasize this enough, <strong>Start the projects early. </strong>Due to the limited availability of resources, 61B had less staff this semester and hence OH were very crowded. So start early and clear all your conceptual doubts before you even write a single line of Java code. Go to labs, a lot of them discuss design ideas, approaches and that really helps in getting a headstart on the projects.</p>\n<p></p>\n<p>Hope this helps! Feel free to post follow-ups down here, if you have any more questions.</p>", "created": "2019-12-23T02:10:44Z", "subject": "", "uid": "jjs6ge7urqc129"}, {"anon": "no", "content": "<p>Refer to &#64;10936.</p>\n<p></p>\n<p>In addition to those answers, I would just want to add that knowing how to program in Java or not knowing how to program in Java has absolutely no role in this class, except for the first few lectures when the professors talk about Java and its semantics a bit, like static and dynamic typing.</p>\n<p></p>\n<p>Watching Hug&#39;s videos is not at all a bad idea. The only fundamental difference between PNH&#39;s and Hug&#39;s version is that PNH&#39;s iteration is more project-heavy and not so test-heavy, whereas the opposite is the case with Hug. The content the two cover is the same, except a few extra things that one covers and the other doesn&#39;t, like PNH introduces some concepts of CS 188 (Introduction to Artificial Intelligence) like Game Trees, Alpha-Beta pruning, Heuristic values etc.</p>", "created": "2019-12-23T02:03:43Z", "subject": "", "uid": "jjs6ge7urqc129"}, {"anon": "no", "content": "<p>Refer to &#64;10975.</p>\n<p></p>\n<p>In addition to those answers, I would just want to add that knowing how to program in Java or not knowing how to program in Java has absolutely no role in this class, except for the first few lectures when the professors talk about Java and its semantics a bit, like static and dynamic typing. </p>\n<p></p>\n<p>Watching Hug&#39;s videos is not at all a bad idea. The only fundamental difference between PNH&#39;s and Hug&#39;s version is that PNH&#39;s iteration is more project-heavy and not so test-heavy, whereas the opposite is the case with Hug. The content the two cover is the same, except a few extra things that one covers and the other doesn&#39;t, like PNH introduces some concepts of CS 188 (Introduction to Artificial Intelligence) like Game Trees, Alpha-Beta pruning, Heuristic values etc.</p>", "created": "2019-12-23T02:03:12Z", "subject": "", "uid": "jjs6ge7urqc129"}, {"anon": "no", "content": "<p>Refer to &#64;10975.</p>\n<p></p>\n<p>In addition to those answers, I would just want to add that knowing how to program in Java or not knowing how to program in Java has absolutely no role in this class, except for the first few lectures when the professors talk about</p>", "created": "2019-12-23T01:59:59Z", "subject": "", "uid": "jjs6ge7urqc129"}], "id": "k4hsm5vbzhim9", "is_tag_endorse": false, "tag_endorse": [{"admin": false, "endorser": {}, "facebook_id": null, "id": "is6p6j9n6u55fp", "name": "Katie Gu", "photo": "1513749563_35.png", "photo_url": "https://d1b10bmlvqabco.cloudfront.net/photos/is6p6j9n6u55fp/1513749563_35.png", "published": true, "role": "student", "us": false}, {"admin": false, "endorser": {"jleezm2q8ns2io": 1541586796, "k5eevxebzpj25b": 1580875240}, "facebook_id": null, "id": "jla6oytnw93g", "name": "Ranelle Gomez", "photo": "1580441001_200.jpg", "photo_url": "https://d1b10bmlvqabco.cloudfront.net/photos/jla6oytnw93g/1580441001_200.jpg", "published": true, "role": "student", "us": false}], "tag_endorse_arr": ["is6p6j9n6u55fp", "jla6oytnw93g"], "type": "s_answer"}, {"anon": "stud", "bucket_name": "Week 12/22 - 12/28", "bucket_order": 15, "children": [{"anon": "no", "bucket_name": "Week 12/22 - 12/28", "bucket_order": 15, "children": [], "config": {}, "created": "2019-12-23T02:03:51Z", "data": {"embed_links": null}, "folders": [], "id": "k4hsr50xzwi5g3", "subject": "<p>Oops, my bad. Now corrected.</p>", "tag_good": [], "tag_good_arr": [], "type": "feedback", "uid": "jjs6ge7urqc129", "updated": "2019-12-23T02:03:51Z"}, {"anon": "stud", "bucket_name": "Week 12/22 - 12/28", "bucket_order": 15, "children": [], "config": {}, "created": "2019-12-24T02:26:35Z", "data": {"embed_links": null}, "folders": [], "id": "k4j908b52qi1yx", "subject": "<p>Thanks for the detailed response. What are your thoughts on the following reading material?\u00a0</p>\n<ul><li>HFJ:\u00a0<i>Head First Java</i></li><li>AJR:\u00a0<a href=\"https://inst.eecs.berkeley.edu/~cs61b/fa19/materials/book1/java.pdf\" target=\"blank\" rel=\"noopener noreferrer\"><i>A Java Reference</i></a></li><li>DSIJ:\u00a0<a href=\"https://inst.eecs.berkeley.edu/~cs61b/fa19/materials/book2/data-structures.pdf\" target=\"blank\" rel=\"noopener noreferrer\"><i>Data Structures (Into Java)</i></a></li></ul>", "tag_good": [], "tag_good_arr": [], "type": "feedback", "uid_a": "a_0", "updated": "2019-12-24T02:26:35Z"}, {"anon": "stud", "bucket_name": "Week 12/29 - 1/4", "bucket_order": 14, "children": [], "config": {}, "created": "2020-01-03T07:02:14Z", "data": {"embed_links": null}, "folders": [], "id": "k4xt98i91oq54c", "subject": "<p>I found Head First Java really useful in terms of\u00a0getting an intuitive background of Java. I would highly recommend reading the corresponding chapters if you&#39;re confused about a particular syntax. But do keep in mind it&#39;s quite basic level and you should def\u00a0\u00a0do practice exams and discussions. Use it as a supplement for lecture</p>", "tag_good": [], "tag_good_arr": [], "type": "feedback", "uid_a": "a_2", "updated": "2020-01-03T07:02:14Z"}], "config": {}, "created": "2019-12-23T02:02:59Z", "data": {"embed_links": null}, "folders": [], "id": "k4hsq0z01vf6hx", "no_answer": 0, "no_upvotes": 0, "subject": "<p>Is &#64;10975 the right reference? I see this when I click it.\u00a0</p>\n<p><img src=\"/redirect/s3?bucket=uploads&amp;prefix=attach%2Fhyq0br1u3kx7dg%2Fjla6oytnw93g%2Fk4hspqnhjguu%2FScreen_Shot_20191222_at_6.01.54_PM.png\" alt=\"\" /></p>", "tag_good": [], "tag_good_arr": [], "type": "followup", "uid_a": "a_0", "updated": "2019-12-23T02:02:59Z"}, {"anon": "stud", "bucket_name": "Week 12/22 - 12/28", "bucket_order": 15, "children": [], "config": {}, "created": "2019-12-26T06:42:01Z", "data": {"embed_links": null}, "folders": [], "id": "k4md0f745761pz", "no_answer": 0, "no_upvotes": 0, "subject": "<p>Take the break off man - focus on you, you don&#39;t need to prepare unless you did poorly in cs61A. Everything that Priyans says in terms of tips while you are taking the class are good though.<br /><br />Tips while taking the class:</p>\n<p>Start projects early</p>\n<p>Focus on completing Projects, less on Lectures\u00a0</p>\n<p>If you really need to learn something for a midterm/final - use Hug&#39;s lecture notes</p>", "tag_good": [], "tag_good_arr": [], "type": "followup", "uid_a": "a_1", "updated": "2019-12-26T06:42:01Z"}, {"anon": "stud", "bucket_name": "Week 12/29 - 1/4", "bucket_order": 14, "children": [], "config": {}, "created": "2020-01-03T07:04:20Z", "data": {"embed_links": null}, "folders": [], "id": "k4xtbx7c57324k", "no_answer": 0, "no_upvotes": 0, "subject": "<p>Biggest thing for Prof\u00a0Hilfinger&#39;s\u00a0CS61B is that you must must must start projects early. He&#39;s really fair about grading. If you literally do all the projects properly, you&#39;ll get so much out of this class and revising for exams will be much easier.\u00a0</p>\n<p>His tests are hard but it&#39;s so worth it to get a solid understanding of 61B for future courses like 170 and 186</p>", "tag_good": [], "tag_good_arr": [], "type": "followup", "uid_a": "a_2", "updated": "2020-01-03T07:04:20Z"}, {"anon": "stud", "bucket_name": "Week 12/29 - 1/4", "bucket_order": 14, "children": [], "config": {}, "created": "2020-01-03T18:26:26Z", "data": {"embed_links": null}, "folders": [], "id": "k4yhp41rnte69l", "no_answer": 0, "no_upvotes": 0, "subject": "<p>Not sure if this is just me but I often find lectures nowadays insufficient. I watched Shewchuk&#39;s 2006 lectures when I took the class. This is especially helpful for datastructures.</p>", "tag_good": [], "tag_good_arr": [], "type": "followup", "uid_a": "a_3", "updated": "2020-01-03T18:26:26Z"}], "config": {"seen": {"10719": 0, "10936": 7, "2664": 9, "2809": 5, "5681": 3, "7021": 4, "7912": 6, "8203": 8, "8366": 1, "9638": 2}}, "created": "2019-12-23T01:14:53Z", "data": {"embed_links": []}, "default_anonymity": "no", "drafts": null, "folders": ["other", "peer_directed"], "history": [{"anon": "stud", "content": "<p>How can I effectively prepare for Hilfinger&#39;s 61B over the break? I see that one needs an instructional account to be able to do the assignments. I fear that the workload will overwhelm me if I don&#39;t prepare ahead of time (I&#39;ve never programmed in Java and often fell behind in 61A as a programming noob). Would watching Hug&#39;s videos be a waste of time? How effective is the textbook for self-study? Thanks for answering!\u00a0</p>", "created": "2019-12-23T02:00:10Z", "subject": "CS 61B preparation over the break", "uid_a": "a_0"}, {"anon": "stud", "content": "<p>How can I effectively prepare for Hilfinger&#39;s 61B over the break? I see that one needs an instructional account to be able to do the assignments. I fear for the workload will overwhelm me if I don&#39;t prepare ahead of time (I&#39;ve never programmed in Java and often fell behind in 61A as a programming noob). Would watching Hug&#39;s videos be a waste of time? How effective is the textbook for self-study? Thanks for answering!\u00a0</p>", "created": "2019-12-23T01:14:53Z", "subject": "CS 61B preparation over the break", "uid_a": "a_0"}], "i_edits": [], "id": "k4hr05s2gcq1po", "is_bookmarked": false, "is_tag_good": false, "my_favorite": false, "no_answer": 0, "no_answer_followup": 0, "nr": 11001, "num_favorites": 2, "q_edits": [], "request_instructor": 0, "request_instructor_me": false, "s_edits": [], "status": "active", "t": 1654544883511, "tag_good": [], "tag_good_arr": [], "tags": ["other", "peer_directed", "student"], "type": "question", "unique_views": 441}