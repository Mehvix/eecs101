{"bookmarked": 4, "bucket_name": "Today", "bucket_order": 3, "change_log": [{"anon": "no", "data": "jbuxpf1um662sg", "type": "create", "uid": "is25wwpv21b3nn", "when": "2017-12-31T15:32:02Z"}, {"anon": "no", "data": "jbuxrus3por3ep", "type": "update", "uid": "is25wwpv21b3nn", "when": "2017-12-31T15:33:55Z"}, {"anon": "no", "data": "jbuxsy7pwz3m2", "type": "update", "uid": "is25wwpv21b3nn", "when": "2017-12-31T15:34:46Z"}, {"anon": "no", "to": "jbuxpf1sbra2sf", "type": "followup", "uid": "hzd1lhoceif2yh", "when": "2018-01-01T18:29:35Z"}], "children": [{"anon": "no", "bucket_name": "Week 12/31 - 1/6", "bucket_order": 179, "children": [], "config": {}, "created": "2018-01-01T18:29:35Z", "data": {"embed_links": null}, "folders": [], "id": "jbwjhm48n1k65f", "no_answer": 0, "no_upvotes": 0, "subject": "<p>For anyone tackling this, used this super helpful package to figure out some matches for stuff that didn&#39;t line up perfectly. May be useful as a first comparison before you hop into something like sentiment analysis:\u00a0</p>\n<p></p>\n<p>https://github.com/seatgeek/fuzzywuzzy</p>", "tag_good": [], "tag_good_arr": [], "type": "followup", "uid": "hzd1lhoceif2yh", "updated": "2018-01-01T18:29:35Z"}], "config": {}, "created": "2017-12-31T15:32:02Z", "data": {"embed_links": []}, "default_anonymity": "no", "drafts": null, "folders": ["other"], "history": [{"anon": "no", "content": "<p>Hi all,</p>\n<p></p>\n<p>I downloaded and (very roughly) processed the data from this Piazza. These data\u00a0will be useful if you want to do something interesting over this winter break and beyond: <strong>why not build a bot for this piazza?</strong>\u00a0As the post &#64;5842 hinted, if there exists a bot that recognizes duplicates (or a step further, answers student&#39;s question using existing knowledge base), EECS 101 Piazza will be a much better place.\u00a0</p>\n<p></p>\n<p>You may exercise any knowledge you have and go beyond your current knowledge. And this projects\u00a0can generalizes beyond EECS 101 Piazza.\u00a0</p>\n<p></p>\n<p>The dataset is available at\u00a0<a href=\"https://github.com/simon-mo/eecs101-raw-data\">https://github.com/simon-mo/eecs101-raw-data</a>\u00a0</p>\n<p></p>\n<p>Here are some description about the dataset:</p>\n<pre># eecs101-raw-data\nThis repo provides essential data for those who wants to build a bot for Piazza. \n\nIt has three kinds of data with its accompanying Jupyter Notebook detailing how the data is produced. \n\n## 0. Real Dataset Warning\n\nCaution: this is a &#34;real&#34; dataset. It&#39;s not toy dataset. This dataset is very very very messy but it captures the ground truth. \n\n## 1. Raw Data\n\nData: &#96;all_posts.pkl&#96; consists of a list of dictionaries. \n\nNote: The raw &#96;json&#96; turned &#96;dict&#96; in python for every single post object. This data contains everything you would see on viewing a post on Piazza and even more information. But be data is a bit messy. You are welcome to dig around. You might use &#96;Raw to Dataframe.ipynb&#96; to get some hints on how to understand the dictionary scheme. \n\n## 2. Processed Data (in pd.Dataframe Format)\n\nData: &#96;all_content_dataframe.pkl&#96; consists of a pandas dataframe\n\nNote: I roughly processed the raw data and selected certain components and put them into a pandas dataframe. This is still unpolished data for machine learning type project. But it&#39;s a start.\n\n## 3. Reference Matrix \n\nData: &#96;ref_matrix.npz&#96; is a spicy csr compressed matrix. You can easily &#39;convert&#39; it into a numpy matrix.\n\nNote: I counted the reference (in &#64;post_number format) from post row &#96;i&#96; to post column &#96;j&#96;. This matrix turns out to to really sparse (as you may expect). The dimension is roughly 5600 times 5600. But there are only about 800 references. </pre>\n<p></p>", "created": "2017-12-31T15:34:46Z", "subject": "Raw Data for Building a Piazza Bot", "uid": "is25wwpv21b3nn"}, {"anon": "no", "content": "<p>Hi all,</p>\n<p></p>\n<p>I downloaded and (very roughly) processed the data from this Piazza. These data\u00a0will be useful if you want to do something interesting over this winter break and beyond: <strong>why not build a bot for this piazza?</strong>\u00a0As the post &#64;5842 hinted, if there exists a bot that recognizes duplicates (or a step further, answers student&#39;s question using existing knowledge base), EECS 101 Piazza will be a much better place.\u00a0</p>\n<p></p>\n<p>You may exercise any knowledge you have and go beyond your current knowledge. And this projects\u00a0can generalizes beyond EECS 101 Piazza.\u00a0</p>\n<p></p>\n<p>The dataset is available at\u00a0<a href=\"https://github.com/simon-mo/eecs101-raw-data\">https://github.com/simon-mo/eecs101-raw-data</a>\u00a0</p>\n<p></p>\n<p>Here are some description about the dataset:</p>\n<pre># eecs101-raw-data\nThis repo provides essential data for those who wants to build a bot for Piazza. \n\nIt has three kinds of data with its accompanying Jupyter Notebook detailing how the data is produced. \n\n## 0. Real Dataset Warning\n\nCaution: this is a &#34;real&#34; dataset. It&#39;s not toy dataset. This dataset is very very very messy but it captures the ground truth. \n\n## 1. Raw Data\n\nData: &#96;all_posts.pkl&#96; consists of a list of dictionaries. \n\nNote: The raw &#96;json&#96; turned &#96;dict&#96; in python for every single post object. This data contains everything you would see on viewing a post on Piazza and even more information. But be data is a bit messy. You are welcome to dig around. You might use &#96;Raw to Dataframe.ipynb&#96; to get some hints on how to understand the dictionary scheme. \n\n## 2. Processed Data (in pd.Dataframe Format)\n\nData: &#96;all_content_dataframe.pkl&#96; consists of a pandas dataframe\n\nNote: I roughly processed the raw data and selected certain components and put them into a pandas dataframe. This is still unpolished data for machine learning type project. But it&#39;s a start.\n\n## 3. Reference Matrix \n\nData: &#96;ref_matrix.npz&#96; is a spicy csr compressed matrix. You can easily &#39;convert&#39; it into a numpy matrix.\n\nNote: I counted the reference (in &#64;post_number format) from post row &#96;i&#96; to post column &#96;j&#96;. This matrix turns out to to really sparse. The dimension is roughly 5600 times 5600. But there are only about 800 references. </pre>\n<p></p>", "created": "2017-12-31T15:33:55Z", "subject": "Raw Data for Building a Piazza Bot", "uid": "is25wwpv21b3nn"}, {"anon": "no", "content": "<p>Hi all,</p>\n<p></p>\n<p>I downloaded and (very roughly) processed the data from this Piazza. These data\u00a0will be useful if you want to do something interesting over this winter break and beyond: <strong>why not build a bot for this piazza?</strong>\u00a0As the post &#64;5842 hinted, if there exists a bot that recognizes duplicates (or a step further, answers student&#39;s question using existing knowledge base), EECS 101 Piazza will be a much better place.\u00a0</p>\n<p></p>\n<p>You may exercise any knowledge you have and go beyond your current knowledge. And this projects\u00a0can generalizes beyond EECS 101 Piazza.\u00a0</p>\n<p></p>\n<p>The dataset is available at\u00a0<a href=\"https://github.com/simon-mo/eecs101-raw-data\">https://github.com/simon-mo/eecs101-raw-data</a>\u00a0</p>\n<p></p>\n<p>Here are some description about the dataset:</p>\n<pre># eecs101-raw-data\nThis repo provides essential data for those who wants to build a bot for Piazza. \n\nIt has three kinds of data with its accompanying Jupyter Notebook detailing how the data is produced. \n\n## 0. Real Dataset Warning\n\nCaution: this is a &#34;real&#34; dataset. It&#39;s not toy dataset. This dataset is very very very messy but it captures the ground truth. \n\n## 1. Raw Data\n\nData: &#96;all_posts.pkl&#96; consists of a list of dictionaries. \n\nNote: The raw &#96;json&#96; turned &#96;dict&#96; in python for every single post object. This data contains everything you would see on viewing a post on Piazza and even more information. But be data is a bit messy. You are welcome to dig around. You might use &#96;Raw to Dataframe.ipynb&#96; to get some hints on how to understand the dictionary scheme. \n\n## 2. Processed Data (in pd.Dataframe Format)\n\nData: &#96;all_content_dataframe.pkl&#96; consists of a pandas dataframe\n\nNote: I roughly processed the raw data and selected certain components and put them into a pandas dataframe. This is still unpolished data. \n\n## 3. Reference Matrix \n\nData: &#96;ref_matrix.npz&#96; is a spicy csr compressed matrix. You can easily &#39;convert&#39; it into a numpy matrix.\n\nNote: I counted the reference (in &#64;post_number format) from post row &#96;i&#96; to post column &#96;j&#96;. This matrix turns out to to really sparse. The dimension is roughly 5600 times 5600. But there are only about 800 references. </pre>\n<p></p>", "created": "2017-12-31T15:32:02Z", "subject": "Raw Data for Building a Piazza Bot", "uid": "is25wwpv21b3nn"}], "history_size": 3, "i_edits": [], "id": "jbuxpf1sbra2sf", "is_bookmarked": false, "is_tag_good": false, "my_favorite": false, "no_answer_followup": 0, "nr": 5877, "num_favorites": 3, "q_edits": [], "request_instructor": 0, "request_instructor_me": false, "s_edits": [], "status": "active", "t": 1654550426440, "tag_good": [{"admin": false, "endorser": {}, "facebook_id": null, "id": "hzt74ba6hds1qp", "name": "Robert Matych", "photo": "1455322321_35.png", "photo_url": "https://cdn-uploads.piazza.com/photos/hzt74ba6hds1qp/1455322321_35.png", "published": true, "role": "student", "us": false}, {"admin": false, "endorser": {"jr8sl66mba92d": 1557168558}, "facebook_id": null, "id": "hqojmuq9pzr129", "name": "Hayden Sheung", "photo": null, "photo_url": null, "published": true, "role": "student", "us": false}, {"admin": false, "endorser": {}, "facebook_id": null, "id": "j5x7odf43ze772", "name": "Dhanush Patel", "photo": "1503736904_35.png", "photo_url": "https://cdn-uploads.piazza.com/photos/j5x7odf43ze772/1503736904_35.png", "published": true, "role": "student", "us": false}, {"admin": false, "endorser": {"is81fjx7a10p1": 1, "j2ji31rkkl2og": 1}, "facebook_id": null, "id": "id3qnf7jwm74bl", "name": "Shikhar Bahl", "photo": null, "photo_url": null, "published": true, "role": "student", "us": false}, {"admin": false, "endorser": {}, "facebook_id": null, "id": "hzbysi644fa7o5", "name": "Ashwin Ajit Vasvani", "photo": "1503682014_35.png", "photo_url": "https://cdn-uploads.piazza.com/photos/hzbysi644fa7o5/1503682014_35.png", "published": true, "role": "student", "us": false}, {"admin": false, "endorser": {}, "facebook_id": null, "id": "hzd1lhoceif2yh", "name": "Kunal Mishra", "photo": "1535434701_35.png", "photo_url": "https://cdn-uploads.piazza.com/photos/hzd1lhoceif2yh/1535434701_35.png", "published": true, "role": "student", "us": false}, {"admin": false, "endorser": {}, "facebook_id": null, "id": "is6p9iqhcexqe", "name": "Janaki Vivrekar", "photo": "1617956133_200.jpg", "photo_url": "https://cdn-uploads.piazza.com/photos/is6p9iqhcexqe/1617956133_200.jpg", "published": true, "role": "student", "us": false}, {"admin": false, "class_sections": ["classof2019_hyq0br1u3kx7dg"], "endorser": {"global": 1, "imm91o6q8qv5hg": 1, "is758hjb2yo2sy": 1, "ixwkta02en780": 1}, "facebook_id": null, "id": "icguy7g0roh1q3", "name": "Aditya Baradwaj", "photo": "1455863575_35.png", "photo_url": "https://cdn-uploads.piazza.com/photos/icguy7g0roh1q3/1455863575_35.png", "published": true, "role": "student", "us": false}, {"admin": false, "endorser": {}, "facebook_id": null, "id": "j3l3zadxpy7594", "name": "Viraj Attre", "photo": null, "photo_url": null, "published": true, "role": "student", "us": false}], "tag_good_arr": ["hzt74ba6hds1qp", "hqojmuq9pzr129", "j5x7odf43ze772", "id3qnf7jwm74bl", "hzbysi644fa7o5", "hzd1lhoceif2yh", "is6p9iqhcexqe", "icguy7g0roh1q3", "j3l3zadxpy7594"], "tags": ["other", "student"], "type": "note", "unique_views": 443}